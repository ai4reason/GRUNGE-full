(type_definition "ty_2Einteger_2Eint" 0)
; c.integer.ABS: :int -> int
(constant_definition "c_2Einteger_2EABS" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" "ty_2Einteger_2Eint"))
; c.integer.LEAST_INT: :(int -> bool) -> int
(constant_definition "c_2Einteger_2ELEAST__INT" ("ty_2Emin_2Efun" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" "ty_2Emin_2Ebool") "ty_2Einteger_2Eint"))
; c.integer.Num: :int -> num
(constant_definition "c_2Einteger_2ENum" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" "ty_2Enum_2Enum"))
; c.integer.int_0: :int
(constant_definition "c_2Einteger_2Eint__0" "ty_2Einteger_2Eint")
; c.integer.int_1: :int
(constant_definition "c_2Einteger_2Eint__1" "ty_2Einteger_2Eint")
; c.integer.int_ABS: :num # num -> int
(constant_definition "c_2Einteger_2Eint__ABS" ("ty_2Emin_2Efun" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") "ty_2Einteger_2Eint"))
; c.integer.int_ABS_CLASS: :(num # num -> bool) -> int
(constant_definition "c_2Einteger_2Eint__ABS__CLASS" ("ty_2Emin_2Efun" ("ty_2Emin_2Efun" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") "ty_2Emin_2Ebool") "ty_2Einteger_2Eint"))
; c.integer.int_REP: :int -> num # num
(constant_definition "c_2Einteger_2Eint__REP" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")))
; c.integer.int_REP_CLASS: :int -> num # num -> bool
(constant_definition "c_2Einteger_2Eint__REP__CLASS" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" ("ty_2Emin_2Efun" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") "ty_2Emin_2Ebool")))
; c.integer.int_add: :int -> int -> int
(constant_definition "c_2Einteger_2Eint__add" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" "ty_2Einteger_2Eint")))
; c.integer.int_div: :int -> int -> int
(constant_definition "c_2Einteger_2Eint__div" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" "ty_2Einteger_2Eint")))
; c.integer.int_divides: :int -> int -> bool
(constant_definition "c_2Einteger_2Eint__divides" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" "ty_2Emin_2Ebool")))
; c.integer.int_exp: :int -> num -> int
(constant_definition "c_2Einteger_2Eint__exp" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" ("ty_2Emin_2Efun" "ty_2Enum_2Enum" "ty_2Einteger_2Eint")))
; c.integer.int_ge: :int -> int -> bool
(constant_definition "c_2Einteger_2Eint__ge" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" "ty_2Emin_2Ebool")))
; c.integer.int_gt: :int -> int -> bool
(constant_definition "c_2Einteger_2Eint__gt" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" "ty_2Emin_2Ebool")))
; c.integer.int_le: :int -> int -> bool
(constant_definition "c_2Einteger_2Eint__le" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" "ty_2Emin_2Ebool")))
; c.integer.int_lt: :int -> int -> bool
(constant_definition "c_2Einteger_2Eint__lt" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" "ty_2Emin_2Ebool")))
; c.integer.int_max: :int -> int -> int
(constant_definition "c_2Einteger_2Eint__max" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" "ty_2Einteger_2Eint")))
; c.integer.int_min: :int -> int -> int
(constant_definition "c_2Einteger_2Eint__min" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" "ty_2Einteger_2Eint")))
; c.integer.int_mod: :int -> int -> int
(constant_definition "c_2Einteger_2Eint__mod" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" "ty_2Einteger_2Eint")))
; c.integer.int_mul: :int -> int -> int
(constant_definition "c_2Einteger_2Eint__mul" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" "ty_2Einteger_2Eint")))
; c.integer.int_neg: :int -> int
(constant_definition "c_2Einteger_2Eint__neg" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" "ty_2Einteger_2Eint"))
; c.integer.int_of_num: :num -> int
(constant_definition "c_2Einteger_2Eint__of__num" ("ty_2Emin_2Efun" "ty_2Enum_2Enum" "ty_2Einteger_2Eint"))
; c.integer.int_quot: :int -> int -> int
(constant_definition "c_2Einteger_2Eint__quot" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" "ty_2Einteger_2Eint")))
; c.integer.int_rem: :int -> int -> int
(constant_definition "c_2Einteger_2Eint__rem" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" "ty_2Einteger_2Eint")))
; c.integer.int_sub: :int -> int -> int
(constant_definition "c_2Einteger_2Eint__sub" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" "ty_2Einteger_2Eint")))
; c.integer.tint_0: :num # num
(constant_definition "c_2Einteger_2Etint__0" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum"))
; c.integer.tint_1: :num # num
(constant_definition "c_2Einteger_2Etint__1" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum"))
; c.integer.tint_add: :num # num -> num # num -> num # num
(constant_definition "c_2Einteger_2Etint__add" ("ty_2Emin_2Efun" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("ty_2Emin_2Efun" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum"))))
; c.integer.tint_eq: :num # num -> num # num -> bool
(constant_definition "c_2Einteger_2Etint__eq" ("ty_2Emin_2Efun" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("ty_2Emin_2Efun" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") "ty_2Emin_2Ebool")))
; c.integer.tint_lt: :num # num -> num # num -> bool
(constant_definition "c_2Einteger_2Etint__lt" ("ty_2Emin_2Efun" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("ty_2Emin_2Efun" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") "ty_2Emin_2Ebool")))
; c.integer.tint_mul: :num # num -> num # num -> num # num
(constant_definition "c_2Einteger_2Etint__mul" ("ty_2Emin_2Efun" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("ty_2Emin_2Efun" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum"))))
; c.integer.tint_neg: :num # num -> num # num
(constant_definition "c_2Einteger_2Etint__neg" ("ty_2Emin_2Efun" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")))
; c.integer.tint_of_num: :num -> num # num
(constant_definition "c_2Einteger_2Etint__of__num" ("ty_2Emin_2Efun" "ty_2Enum_2Enum" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")))
; integer.EQ_LADD: ∀V0x V1y V2z. (V0x + V1y = V0x + V2z) ⇔ (V1y = V2z)
(conjecture "thm_2Einteger_2EEQ__LADD" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0x" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1y" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V2z" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Enum_2Enum") ("c_2Earithmetic_2E_2B" "V0x" "V1y") ("c_2Earithmetic_2E_2B" "V0x" "V2z")) (("c_2Emin_2E_3D" "ty_2Enum_2Enum") "V1y" "V2z")))))))))
; integer.EQ_ADDL: ∀V0x V1y. (V0x = V0x + V1y) ⇔ (V1y = 0)
(conjecture "thm_2Einteger_2EEQ__ADDL" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0x" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1y" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Enum_2Enum") "V0x" ("c_2Earithmetic_2E_2B" "V0x" "V1y")) (("c_2Emin_2E_3D" "ty_2Enum_2Enum") "V1y" "c_2Enum_2E0")))))))
; integer.LT_LADD: ∀V0x V1y V2z. V0x + V1y < V0x + V2z ⇔ V1y < V2z
(conjecture "thm_2Einteger_2ELT__LADD" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0x" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1y" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V2z" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Eprim__rec_2E_3C" ("c_2Earithmetic_2E_2B" "V0x" "V1y") ("c_2Earithmetic_2E_2B" "V0x" "V2z")) ("c_2Eprim__rec_2E_3C" "V1y" "V2z")))))))))
; integer.LT_ADDL: ∀V0x V1y. V0x < V0x + V1y ⇔ 0 < V1y
(conjecture "thm_2Einteger_2ELT__ADDL" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0x" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1y" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Eprim__rec_2E_3C" "V0x" ("c_2Earithmetic_2E_2B" "V0x" "V1y")) ("c_2Eprim__rec_2E_3C" "c_2Enum_2E0" "V1y")))))))
; integer.LT_ADDR: ∀V0x V1y. ¬(V0x + V1y < V0x)
(conjecture "thm_2Einteger_2ELT__ADDR" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0x" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1y" "ty_2Enum_2Enum" ("c_2Ebool_2E_7E" ("c_2Eprim__rec_2E_3C" ("c_2Earithmetic_2E_2B" "V0x" "V1y") "V0x")))))))
; integer.LT_ADD2: ∀V0x1 V1x2 V2y1 V3y2. V0x1 < V2y1 ∧ V1x2 < V3y2 ⇒ V0x1 + V1x2 < V2y1 + V3y2
(conjecture "thm_2Einteger_2ELT__ADD2" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0x1" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1x2" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V2y1" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V3y2" "ty_2Enum_2Enum" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" ("c_2Eprim__rec_2E_3C" "V0x1" "V2y1") ("c_2Eprim__rec_2E_3C" "V1x2" "V3y2")) ("c_2Eprim__rec_2E_3C" ("c_2Earithmetic_2E_2B" "V0x1" "V1x2") ("c_2Earithmetic_2E_2B" "V2y1" "V3y2"))))))))))))
; integer.tint_0: tint_0 = (1,1)
(axiom "thm_2Einteger_2Etint__0" (("c_2Emin_2E_3D" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) "c_2Einteger_2Etint__0" (("c_2Epair_2E_2C" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO")) ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO")))))
; integer.tint_1: tint_1 = (1 + 1,1)
(axiom "thm_2Einteger_2Etint__1" (("c_2Emin_2E_3D" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) "c_2Einteger_2Etint__1" (("c_2Epair_2E_2C" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("c_2Earithmetic_2E_2B" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO")) ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO"))) ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO")))))
; integer.tint_neg: ∀V0x V1y. tint_neg (V0x,V1y) = (V1y,V0x)
(axiom "thm_2Einteger_2Etint__neg" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0x" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1y" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) ("c_2Einteger_2Etint__neg" (("c_2Epair_2E_2C" "ty_2Enum_2Enum" "ty_2Enum_2Enum") "V0x" "V1y")) (("c_2Epair_2E_2C" "ty_2Enum_2Enum" "ty_2Enum_2Enum") "V1y" "V0x")))))))
; integer.tint_add: ∀V0x1 V1y1 V2x2 V3y2.     (V0x1,V1y1) tint_add (V2x2,V3y2) = (V0x1 + V2x2,V1y1 + V3y2)
(axiom "thm_2Einteger_2Etint__add" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0x1" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1y1" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V2x2" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V3y2" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) ("c_2Einteger_2Etint__add" (("c_2Epair_2E_2C" "ty_2Enum_2Enum" "ty_2Enum_2Enum") "V0x1" "V1y1") (("c_2Epair_2E_2C" "ty_2Enum_2Enum" "ty_2Enum_2Enum") "V2x2" "V3y2")) (("c_2Epair_2E_2C" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("c_2Earithmetic_2E_2B" "V0x1" "V2x2") ("c_2Earithmetic_2E_2B" "V1y1" "V3y2"))))))))))))
; integer.tint_mul: ∀V0x1 V1y1 V2x2 V3y2.     (V0x1,V1y1) tint_mul (V2x2,V3y2) =     (V0x1 * V2x2 + V1y1 * V3y2,V0x1 * V3y2 + V1y1 * V2x2)
(axiom "thm_2Einteger_2Etint__mul" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0x1" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1y1" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V2x2" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V3y2" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) ("c_2Einteger_2Etint__mul" (("c_2Epair_2E_2C" "ty_2Enum_2Enum" "ty_2Enum_2Enum") "V0x1" "V1y1") (("c_2Epair_2E_2C" "ty_2Enum_2Enum" "ty_2Enum_2Enum") "V2x2" "V3y2")) (("c_2Epair_2E_2C" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("c_2Earithmetic_2E_2B" ("c_2Earithmetic_2E_2A" "V0x1" "V2x2") ("c_2Earithmetic_2E_2A" "V1y1" "V3y2")) ("c_2Earithmetic_2E_2B" ("c_2Earithmetic_2E_2A" "V0x1" "V3y2") ("c_2Earithmetic_2E_2A" "V1y1" "V2x2")))))))))))))
; integer.tint_lt: ∀V0x1 V1y1 V2x2 V3y2.     tint_lt (V0x1,V1y1) (V2x2,V3y2) ⇔ V0x1 + V3y2 < V2x2 + V1y1
(axiom "thm_2Einteger_2Etint__lt" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0x1" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1y1" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V2x2" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V3y2" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Etint__lt" (("c_2Epair_2E_2C" "ty_2Enum_2Enum" "ty_2Enum_2Enum") "V0x1" "V1y1") (("c_2Epair_2E_2C" "ty_2Enum_2Enum" "ty_2Enum_2Enum") "V2x2" "V3y2")) ("c_2Eprim__rec_2E_3C" ("c_2Earithmetic_2E_2B" "V0x1" "V3y2") ("c_2Earithmetic_2E_2B" "V2x2" "V1y1"))))))))))))
; integer.tint_eq: ∀V0x1 V1y1 V2x2 V3y2.     tint_eq (V0x1,V1y1) (V2x2,V3y2) ⇔ (V0x1 + V3y2 = V2x2 + V1y1)
(axiom "thm_2Einteger_2Etint__eq" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0x1" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1y1" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V2x2" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V3y2" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Etint__eq" (("c_2Epair_2E_2C" "ty_2Enum_2Enum" "ty_2Enum_2Enum") "V0x1" "V1y1") (("c_2Epair_2E_2C" "ty_2Enum_2Enum" "ty_2Enum_2Enum") "V2x2" "V3y2")) (("c_2Emin_2E_3D" "ty_2Enum_2Enum") ("c_2Earithmetic_2E_2B" "V0x1" "V3y2") ("c_2Earithmetic_2E_2B" "V2x2" "V1y1"))))))))))))
; integer.TINT_EQ_REFL: ∀V0x. tint_eq V0x V0x
(conjecture "thm_2Einteger_2ETINT__EQ__REFL" (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V0x" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("c_2Einteger_2Etint__eq" "V0x" "V0x"))))
; integer.TINT_EQ_SYM: ∀V0x V1y. tint_eq V0x V1y ⇔ tint_eq V1y V0x
(conjecture "thm_2Einteger_2ETINT__EQ__SYM" (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V0x" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V1y" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Etint__eq" "V0x" "V1y") ("c_2Einteger_2Etint__eq" "V1y" "V0x")))))))
; integer.TINT_EQ_TRANS: ∀V0x V1y V2z. tint_eq V0x V1y ∧ tint_eq V1y V2z ⇒ tint_eq V0x V2z
(conjecture "thm_2Einteger_2ETINT__EQ__TRANS" (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V0x" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V1y" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V2z" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Etint__eq" "V0x" "V1y") ("c_2Einteger_2Etint__eq" "V1y" "V2z")) ("c_2Einteger_2Etint__eq" "V0x" "V2z")))))))))
; integer.TINT_EQ_EQUIV: ∀V0p V1q. tint_eq V0p V1q ⇔ (tint_eq V0p = tint_eq V1q)
(conjecture "thm_2Einteger_2ETINT__EQ__EQUIV" (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V0p" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V1q" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Etint__eq" "V0p" "V1q") (("c_2Emin_2E_3D" ("ty_2Emin_2Efun" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") "ty_2Emin_2Ebool")) ("c_2Einteger_2Etint__eq" "V0p") ("c_2Einteger_2Etint__eq" "V1q"))))))))
; integer.TINT_EQ_AP: ∀V0p V1q. (V0p = V1q) ⇒ tint_eq V0p V1q
(conjecture "thm_2Einteger_2ETINT__EQ__AP" (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V0p" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V1q" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("c_2Emin_2E_3D_3D_3E" (("c_2Emin_2E_3D" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) "V0p" "V1q") ("c_2Einteger_2Etint__eq" "V0p" "V1q")))))))
; integer.TINT_10: ¬tint_eq tint_1 tint_0
(conjecture "thm_2Einteger_2ETINT__10" ("c_2Ebool_2E_7E" ("c_2Einteger_2Etint__eq" "c_2Einteger_2Etint__1" "c_2Einteger_2Etint__0")))
; integer.TINT_ADD_SYM: ∀V0x V1y. V0x tint_add V1y = V1y tint_add V0x
(conjecture "thm_2Einteger_2ETINT__ADD__SYM" (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V0x" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V1y" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Emin_2E_3D" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) ("c_2Einteger_2Etint__add" "V0x" "V1y") ("c_2Einteger_2Etint__add" "V1y" "V0x")))))))
; integer.TINT_MUL_SYM: ∀V0x V1y. V0x tint_mul V1y = V1y tint_mul V0x
(conjecture "thm_2Einteger_2ETINT__MUL__SYM" (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V0x" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V1y" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Emin_2E_3D" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) ("c_2Einteger_2Etint__mul" "V0x" "V1y") ("c_2Einteger_2Etint__mul" "V1y" "V0x")))))))
; integer.TINT_ADD_ASSOC: ∀V0x V1y V2z. V0x tint_add (V1y tint_add V2z) = V0x tint_add V1y tint_add V2z
(conjecture "thm_2Einteger_2ETINT__ADD__ASSOC" (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V0x" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V1y" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V2z" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Emin_2E_3D" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) ("c_2Einteger_2Etint__add" "V0x" ("c_2Einteger_2Etint__add" "V1y" "V2z")) ("c_2Einteger_2Etint__add" ("c_2Einteger_2Etint__add" "V0x" "V1y") "V2z")))))))))
; integer.TINT_MUL_ASSOC: ∀V0x V1y V2z. V0x tint_mul (V1y tint_mul V2z) = V0x tint_mul V1y tint_mul V2z
(conjecture "thm_2Einteger_2ETINT__MUL__ASSOC" (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V0x" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V1y" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V2z" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Emin_2E_3D" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) ("c_2Einteger_2Etint__mul" "V0x" ("c_2Einteger_2Etint__mul" "V1y" "V2z")) ("c_2Einteger_2Etint__mul" ("c_2Einteger_2Etint__mul" "V0x" "V1y") "V2z")))))))))
; integer.TINT_LDISTRIB: ∀V0x V1y V2z.     V0x tint_mul (V1y tint_add V2z) =     V0x tint_mul V1y tint_add V0x tint_mul V2z
(conjecture "thm_2Einteger_2ETINT__LDISTRIB" (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V0x" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V1y" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V2z" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Emin_2E_3D" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) ("c_2Einteger_2Etint__mul" "V0x" ("c_2Einteger_2Etint__add" "V1y" "V2z")) ("c_2Einteger_2Etint__add" ("c_2Einteger_2Etint__mul" "V0x" "V1y") ("c_2Einteger_2Etint__mul" "V0x" "V2z"))))))))))
; integer.TINT_ADD_LID: ∀V0x. tint_eq (tint_0 tint_add V0x) V0x
(conjecture "thm_2Einteger_2ETINT__ADD__LID" (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V0x" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("c_2Einteger_2Etint__eq" ("c_2Einteger_2Etint__add" "c_2Einteger_2Etint__0" "V0x") "V0x"))))
; integer.TINT_MUL_LID: ∀V0x. tint_eq (tint_1 tint_mul V0x) V0x
(conjecture "thm_2Einteger_2ETINT__MUL__LID" (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V0x" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("c_2Einteger_2Etint__eq" ("c_2Einteger_2Etint__mul" "c_2Einteger_2Etint__1" "V0x") "V0x"))))
; integer.TINT_ADD_LINV: ∀V0x. tint_eq (tint_neg V0x tint_add V0x) tint_0
(conjecture "thm_2Einteger_2ETINT__ADD__LINV" (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V0x" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("c_2Einteger_2Etint__eq" ("c_2Einteger_2Etint__add" ("c_2Einteger_2Etint__neg" "V0x") "V0x") "c_2Einteger_2Etint__0"))))
; integer.TINT_LT_TOTAL: ∀V0x V1y. tint_eq V0x V1y ∨ tint_lt V0x V1y ∨ tint_lt V1y V0x
(conjecture "thm_2Einteger_2ETINT__LT__TOTAL" (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V0x" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V1y" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("c_2Ebool_2E_5C_2F" ("c_2Einteger_2Etint__eq" "V0x" "V1y") ("c_2Ebool_2E_5C_2F" ("c_2Einteger_2Etint__lt" "V0x" "V1y") ("c_2Einteger_2Etint__lt" "V1y" "V0x"))))))))
; integer.TINT_LT_REFL: ∀V0x. ¬tint_lt V0x V0x
(conjecture "thm_2Einteger_2ETINT__LT__REFL" (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V0x" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("c_2Ebool_2E_7E" ("c_2Einteger_2Etint__lt" "V0x" "V0x")))))
; integer.TINT_LT_TRANS: ∀V0x V1y V2z. tint_lt V0x V1y ∧ tint_lt V1y V2z ⇒ tint_lt V0x V2z
(conjecture "thm_2Einteger_2ETINT__LT__TRANS" (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V0x" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V1y" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V2z" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Etint__lt" "V0x" "V1y") ("c_2Einteger_2Etint__lt" "V1y" "V2z")) ("c_2Einteger_2Etint__lt" "V0x" "V2z")))))))))
; integer.TINT_LT_ADD: ∀V0x V1y V2z. tint_lt V1y V2z ⇒ tint_lt (V0x tint_add V1y) (V0x tint_add V2z)
(conjecture "thm_2Einteger_2ETINT__LT__ADD" (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V0x" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V1y" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V2z" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("c_2Emin_2E_3D_3D_3E" ("c_2Einteger_2Etint__lt" "V1y" "V2z") ("c_2Einteger_2Etint__lt" ("c_2Einteger_2Etint__add" "V0x" "V1y") ("c_2Einteger_2Etint__add" "V0x" "V2z"))))))))))
; integer.TINT_LT_MUL: ∀V0x V1y.     tint_lt tint_0 V0x ∧ tint_lt tint_0 V1y ⇒     tint_lt tint_0 (V0x tint_mul V1y)
(conjecture "thm_2Einteger_2ETINT__LT__MUL" (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V0x" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V1y" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Etint__lt" "c_2Einteger_2Etint__0" "V0x") ("c_2Einteger_2Etint__lt" "c_2Einteger_2Etint__0" "V1y")) ("c_2Einteger_2Etint__lt" "c_2Einteger_2Etint__0" ("c_2Einteger_2Etint__mul" "V0x" "V1y"))))))))
; integer.TINT_NEG_WELLDEF: ∀V0x1 V1x2. tint_eq V0x1 V1x2 ⇒ tint_eq (tint_neg V0x1) (tint_neg V1x2)
(conjecture "thm_2Einteger_2ETINT__NEG__WELLDEF" (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V0x1" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V1x2" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("c_2Emin_2E_3D_3D_3E" ("c_2Einteger_2Etint__eq" "V0x1" "V1x2") ("c_2Einteger_2Etint__eq" ("c_2Einteger_2Etint__neg" "V0x1") ("c_2Einteger_2Etint__neg" "V1x2"))))))))
; integer.TINT_ADD_WELLDEFR: ∀V0x1 V1x2 V2y.     tint_eq V0x1 V1x2 ⇒ tint_eq (V0x1 tint_add V2y) (V1x2 tint_add V2y)
(conjecture "thm_2Einteger_2ETINT__ADD__WELLDEFR" (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V0x1" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V1x2" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V2y" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("c_2Emin_2E_3D_3D_3E" ("c_2Einteger_2Etint__eq" "V0x1" "V1x2") ("c_2Einteger_2Etint__eq" ("c_2Einteger_2Etint__add" "V0x1" "V2y") ("c_2Einteger_2Etint__add" "V1x2" "V2y"))))))))))
; integer.TINT_ADD_WELLDEF: ∀V0x1 V1x2 V2y1 V3y2.     tint_eq V0x1 V1x2 ∧ tint_eq V2y1 V3y2 ⇒     tint_eq (V0x1 tint_add V2y1) (V1x2 tint_add V3y2)
(conjecture "thm_2Einteger_2ETINT__ADD__WELLDEF" (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V0x1" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V1x2" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V2y1" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V3y2" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Etint__eq" "V0x1" "V1x2") ("c_2Einteger_2Etint__eq" "V2y1" "V3y2")) ("c_2Einteger_2Etint__eq" ("c_2Einteger_2Etint__add" "V0x1" "V2y1") ("c_2Einteger_2Etint__add" "V1x2" "V3y2"))))))))))))
; integer.TINT_MUL_WELLDEFR: ∀V0x1 V1x2 V2y.     tint_eq V0x1 V1x2 ⇒ tint_eq (V0x1 tint_mul V2y) (V1x2 tint_mul V2y)
(conjecture "thm_2Einteger_2ETINT__MUL__WELLDEFR" (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V0x1" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V1x2" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V2y" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("c_2Emin_2E_3D_3D_3E" ("c_2Einteger_2Etint__eq" "V0x1" "V1x2") ("c_2Einteger_2Etint__eq" ("c_2Einteger_2Etint__mul" "V0x1" "V2y") ("c_2Einteger_2Etint__mul" "V1x2" "V2y"))))))))))
; integer.TINT_MUL_WELLDEF: ∀V0x1 V1x2 V2y1 V3y2.     tint_eq V0x1 V1x2 ∧ tint_eq V2y1 V3y2 ⇒     tint_eq (V0x1 tint_mul V2y1) (V1x2 tint_mul V3y2)
(conjecture "thm_2Einteger_2ETINT__MUL__WELLDEF" (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V0x1" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V1x2" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V2y1" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V3y2" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Etint__eq" "V0x1" "V1x2") ("c_2Einteger_2Etint__eq" "V2y1" "V3y2")) ("c_2Einteger_2Etint__eq" ("c_2Einteger_2Etint__mul" "V0x1" "V2y1") ("c_2Einteger_2Etint__mul" "V1x2" "V3y2"))))))))))))
; integer.TINT_LT_WELLDEFR: ∀V0x1 V1x2 V2y. tint_eq V0x1 V1x2 ⇒ (tint_lt V0x1 V2y ⇔ tint_lt V1x2 V2y)
(conjecture "thm_2Einteger_2ETINT__LT__WELLDEFR" (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V0x1" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V1x2" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V2y" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("c_2Emin_2E_3D_3D_3E" ("c_2Einteger_2Etint__eq" "V0x1" "V1x2") (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Etint__lt" "V0x1" "V2y") ("c_2Einteger_2Etint__lt" "V1x2" "V2y"))))))))))
; integer.TINT_LT_WELLDEFL: ∀V0x V1y1 V2y2. tint_eq V1y1 V2y2 ⇒ (tint_lt V0x V1y1 ⇔ tint_lt V0x V2y2)
(conjecture "thm_2Einteger_2ETINT__LT__WELLDEFL" (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V0x" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V1y1" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V2y2" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("c_2Emin_2E_3D_3D_3E" ("c_2Einteger_2Etint__eq" "V1y1" "V2y2") (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Etint__lt" "V0x" "V1y1") ("c_2Einteger_2Etint__lt" "V0x" "V2y2"))))))))))
; integer.TINT_LT_WELLDEF: ∀V0x1 V1x2 V2y1 V3y2.     tint_eq V0x1 V1x2 ∧ tint_eq V2y1 V3y2 ⇒     (tint_lt V0x1 V2y1 ⇔ tint_lt V1x2 V3y2)
(conjecture "thm_2Einteger_2ETINT__LT__WELLDEF" (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V0x1" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V1x2" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V2y1" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V3y2" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Etint__eq" "V0x1" "V1x2") ("c_2Einteger_2Etint__eq" "V2y1" "V3y2")) (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Etint__lt" "V0x1" "V2y1") ("c_2Einteger_2Etint__lt" "V1x2" "V3y2"))))))))))))
; integer.tint_of_num: (tint_of_num 0 = tint_0) ∧ ∀V0n. tint_of_num (SUC V0n) = tint_of_num V0n tint_add tint_1
(axiom "thm_2Einteger_2Etint__of__num" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) ("c_2Einteger_2Etint__of__num" "c_2Enum_2E0") "c_2Einteger_2Etint__0") (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0n" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) ("c_2Einteger_2Etint__of__num" ("c_2Enum_2ESUC" "V0n")) ("c_2Einteger_2Etint__add" ("c_2Einteger_2Etint__of__num" "V0n") "c_2Einteger_2Etint__1"))))))
; integer.tint_of_num_eq: ∀V0n. FST (tint_of_num V0n) = SND (tint_of_num V0n) + V0n
(conjecture "thm_2Einteger_2Etint__of__num__eq" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0n" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" "ty_2Enum_2Enum") (("c_2Epair_2EFST" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("c_2Einteger_2Etint__of__num" "V0n")) ("c_2Earithmetic_2E_2B" (("c_2Epair_2ESND" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("c_2Einteger_2Etint__of__num" "V0n")) "V0n")))))
; integer.TINT_INJ: ∀V0m V1n. tint_eq (tint_of_num V0m) (tint_of_num V1n) ⇔ (V0m = V1n)
(conjecture "thm_2Einteger_2ETINT__INJ" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0m" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1n" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Etint__eq" ("c_2Einteger_2Etint__of__num" "V0m") ("c_2Einteger_2Etint__of__num" "V1n")) (("c_2Emin_2E_3D" "ty_2Enum_2Enum") "V0m" "V1n")))))))
; integer.NUM_POSTINT_EX: ∀V0t. ¬tint_lt V0t tint_0 ⇒ ∃V1n. tint_eq V0t (tint_of_num V1n)
(conjecture "thm_2Einteger_2ENUM__POSTINT__EX" (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V0t" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" ("c_2Einteger_2Etint__lt" "V0t" "c_2Einteger_2Etint__0")) (("c_2Ebool_2E_3F" "ty_2Enum_2Enum") (lambda "V1n" "ty_2Enum_2Enum" ("c_2Einteger_2Etint__eq" "V0t" ("c_2Einteger_2Etint__of__num" "V1n"))))))))
; integer.int_TY_DEF: ∃V0rep.     TYPE_DEFINITION (λV1c. ∃V2r. tint_eq V2r V2r ∧ (V1c = tint_eq V2r)) V0rep
(axiom "thm_2Einteger_2Eint__TY__DEF" (("c_2Ebool_2E_3F" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" ("ty_2Emin_2Efun" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") "ty_2Emin_2Ebool"))) (lambda "V0rep" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" ("ty_2Emin_2Efun" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") "ty_2Emin_2Ebool")) (("c_2Ebool_2ETYPE__DEFINITION" ("ty_2Emin_2Efun" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") "ty_2Emin_2Ebool") "ty_2Einteger_2Eint") (lambda "V1c" ("ty_2Emin_2Efun" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") "ty_2Emin_2Ebool") (("c_2Ebool_2E_3F" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V2r" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Etint__eq" "V2r" "V2r") (("c_2Emin_2E_3D" ("ty_2Emin_2Efun" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") "ty_2Emin_2Ebool")) "V1c" ("c_2Einteger_2Etint__eq" "V2r")))))) "V0rep"))))
; integer.int_bijections: (∀V0a. int_ABS_CLASS (int_REP_CLASS V0a) = V0a) ∧ ∀V1r.     (λV2c. ∃V3r. tint_eq V3r V3r ∧ (V2c = tint_eq V3r)) V1r ⇔     (int_REP_CLASS (int_ABS_CLASS V1r) = V1r)
(axiom "thm_2Einteger_2Eint__bijections" ("c_2Ebool_2E_2F_5C" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0a" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__ABS__CLASS" ("c_2Einteger_2Eint__REP__CLASS" "V0a")) "V0a"))) (("c_2Ebool_2E_21" ("ty_2Emin_2Efun" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") "ty_2Emin_2Ebool")) (lambda "V1r" ("ty_2Emin_2Efun" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ((lambda "V2c" ("ty_2Emin_2Efun" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") "ty_2Emin_2Ebool") (("c_2Ebool_2E_3F" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V3r" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Etint__eq" "V3r" "V3r") (("c_2Emin_2E_3D" ("ty_2Emin_2Efun" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") "ty_2Emin_2Ebool")) "V2c" ("c_2Einteger_2Etint__eq" "V3r")))))) "V1r") (("c_2Emin_2E_3D" ("ty_2Emin_2Efun" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") "ty_2Emin_2Ebool")) ("c_2Einteger_2Eint__REP__CLASS" ("c_2Einteger_2Eint__ABS__CLASS" "V1r")) "V1r"))))))
; integer.int_ABS_REP_CLASS: (∀V0a. int_ABS_CLASS (int_REP_CLASS V0a) = V0a) ∧ ∀V1c.     (∃V2r. tint_eq V2r V2r ∧ (V1c = tint_eq V2r)) ⇔     (int_REP_CLASS (int_ABS_CLASS V1c) = V1c)
(conjecture "thm_2Einteger_2Eint__ABS__REP__CLASS" ("c_2Ebool_2E_2F_5C" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0a" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__ABS__CLASS" ("c_2Einteger_2Eint__REP__CLASS" "V0a")) "V0a"))) (("c_2Ebool_2E_21" ("ty_2Emin_2Efun" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") "ty_2Emin_2Ebool")) (lambda "V1c" ("ty_2Emin_2Efun" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Ebool_2E_3F" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V2r" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Etint__eq" "V2r" "V2r") (("c_2Emin_2E_3D" ("ty_2Emin_2Efun" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") "ty_2Emin_2Ebool")) "V1c" ("c_2Einteger_2Etint__eq" "V2r"))))) (("c_2Emin_2E_3D" ("ty_2Emin_2Efun" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") "ty_2Emin_2Ebool")) ("c_2Einteger_2Eint__REP__CLASS" ("c_2Einteger_2Eint__ABS__CLASS" "V1c")) "V1c"))))))
; integer.int_REP_def: ∀V0a. int_REP V0a = $@ (int_REP_CLASS V0a)
(axiom "thm_2Einteger_2Eint__REP__def" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0a" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) ("c_2Einteger_2Eint__REP" "V0a") (("c_2Emin_2E_40" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) ("c_2Einteger_2Eint__REP__CLASS" "V0a"))))))
; integer.int_ABS_def: ∀V0r. int_ABS V0r = int_ABS_CLASS (tint_eq V0r)
(axiom "thm_2Einteger_2Eint__ABS__def" (("c_2Ebool_2E_21" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum")) (lambda "V0r" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__ABS" "V0r") ("c_2Einteger_2Eint__ABS__CLASS" ("c_2Einteger_2Etint__eq" "V0r"))))))
; integer.int_QUOTIENT: QUOTIENT tint_eq int_ABS int_REP
(conjecture "thm_2Einteger_2Eint__QUOTIENT" (("c_2Equotient_2EQUOTIENT" ("ty_2Epair_2Eprod" "ty_2Enum_2Enum" "ty_2Enum_2Enum") "ty_2Einteger_2Eint") "c_2Einteger_2Etint__eq" "c_2Einteger_2Eint__ABS" "c_2Einteger_2Eint__REP"))
; integer.int_0: int_0 = int_ABS tint_0
(axiom "thm_2Einteger_2Eint__0" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "c_2Einteger_2Eint__0" ("c_2Einteger_2Eint__ABS" "c_2Einteger_2Etint__0")))
; integer.int_1: int_1 = int_ABS tint_1
(axiom "thm_2Einteger_2Eint__1" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "c_2Einteger_2Eint__1" ("c_2Einteger_2Eint__ABS" "c_2Einteger_2Etint__1")))
; integer.int_neg: ∀V0T1. -V0T1 = int_ABS (tint_neg (int_REP V0T1))
(axiom "thm_2Einteger_2Eint__neg" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0T1" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__neg" "V0T1") ("c_2Einteger_2Eint__ABS" ("c_2Einteger_2Etint__neg" ("c_2Einteger_2Eint__REP" "V0T1")))))))
; integer.int_add: ∀V0T1 V1T2. V0T1 + V1T2 = int_ABS (int_REP V0T1 tint_add int_REP V1T2)
(axiom "thm_2Einteger_2Eint__add" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0T1" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1T2" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__add" "V0T1" "V1T2") ("c_2Einteger_2Eint__ABS" ("c_2Einteger_2Etint__add" ("c_2Einteger_2Eint__REP" "V0T1") ("c_2Einteger_2Eint__REP" "V1T2")))))))))
; integer.int_mul: ∀V0T1 V1T2. V0T1 * V1T2 = int_ABS (int_REP V0T1 tint_mul int_REP V1T2)
(axiom "thm_2Einteger_2Eint__mul" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0T1" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1T2" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mul" "V0T1" "V1T2") ("c_2Einteger_2Eint__ABS" ("c_2Einteger_2Etint__mul" ("c_2Einteger_2Eint__REP" "V0T1") ("c_2Einteger_2Eint__REP" "V1T2")))))))))
; integer.int_lt: ∀V0T1 V1T2. V0T1 < V1T2 ⇔ tint_lt (int_REP V0T1) (int_REP V1T2)
(axiom "thm_2Einteger_2Eint__lt" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0T1" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1T2" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" "V0T1" "V1T2") ("c_2Einteger_2Etint__lt" ("c_2Einteger_2Eint__REP" "V0T1") ("c_2Einteger_2Eint__REP" "V1T2"))))))))
; integer.INT_10: int_1 ≠ int_0
(conjecture "thm_2Einteger_2EINT__10" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "c_2Einteger_2Eint__1" "c_2Einteger_2Eint__0")))
; integer.INT_ADD_SYM: ∀V0y V1x. V1x + V0y = V0y + V1x
(conjecture "thm_2Einteger_2EINT__ADD__SYM" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__add" "V1x" "V0y") ("c_2Einteger_2Eint__add" "V0y" "V1x")))))))
; integer.INT_ADD_COMM: ∀V0y V1x. V1x + V0y = V0y + V1x
(conjecture "thm_2Einteger_2EINT__ADD__COMM" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__add" "V1x" "V0y") ("c_2Einteger_2Eint__add" "V0y" "V1x")))))))
; integer.INT_MUL_SYM: ∀V0y V1x. V1x * V0y = V0y * V1x
(conjecture "thm_2Einteger_2EINT__MUL__SYM" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mul" "V1x" "V0y") ("c_2Einteger_2Eint__mul" "V0y" "V1x")))))))
; integer.INT_MUL_COMM: ∀V0y V1x. V1x * V0y = V0y * V1x
(conjecture "thm_2Einteger_2EINT__MUL__COMM" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mul" "V1x" "V0y") ("c_2Einteger_2Eint__mul" "V0y" "V1x")))))))
; integer.INT_ADD_ASSOC: ∀V0z V1y V2x. V2x + (V1y + V0z) = V2x + V1y + V0z
(conjecture "thm_2Einteger_2EINT__ADD__ASSOC" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0z" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__add" "V2x" ("c_2Einteger_2Eint__add" "V1y" "V0z")) ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__add" "V2x" "V1y") "V0z")))))))))
; integer.INT_MUL_ASSOC: ∀V0z V1y V2x. V2x * (V1y * V0z) = V2x * V1y * V0z
(conjecture "thm_2Einteger_2EINT__MUL__ASSOC" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0z" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mul" "V2x" ("c_2Einteger_2Eint__mul" "V1y" "V0z")) ("c_2Einteger_2Eint__mul" ("c_2Einteger_2Eint__mul" "V2x" "V1y") "V0z")))))))))
; integer.INT_LDISTRIB: ∀V0z V1y V2x. V2x * (V1y + V0z) = V2x * V1y + V2x * V0z
(conjecture "thm_2Einteger_2EINT__LDISTRIB" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0z" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mul" "V2x" ("c_2Einteger_2Eint__add" "V1y" "V0z")) ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__mul" "V2x" "V1y") ("c_2Einteger_2Eint__mul" "V2x" "V0z"))))))))))
; integer.INT_LT_TOTAL: ∀V0x V1y. (V0x = V1y) ∨ V0x < V1y ∨ V1y < V0x
(conjecture "thm_2Einteger_2EINT__LT__TOTAL" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" ("c_2Ebool_2E_5C_2F" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0x" "V1y") ("c_2Ebool_2E_5C_2F" ("c_2Einteger_2Eint__lt" "V0x" "V1y") ("c_2Einteger_2Eint__lt" "V1y" "V0x"))))))))
; integer.INT_LT_REFL: ∀V0x. ¬(V0x < V0x)
(conjecture "thm_2Einteger_2EINT__LT__REFL" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" ("c_2Ebool_2E_7E" ("c_2Einteger_2Eint__lt" "V0x" "V0x")))))
; integer.INT_LT_TRANS: ∀V0x V1y V2z. V0x < V1y ∧ V1y < V2z ⇒ V0x < V2z
(conjecture "thm_2Einteger_2EINT__LT__TRANS" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2z" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__lt" "V0x" "V1y") ("c_2Einteger_2Eint__lt" "V1y" "V2z")) ("c_2Einteger_2Eint__lt" "V0x" "V2z")))))))))
; integer.INT_LT_LADD_IMP: ∀V0x V1y V2z. V1y < V2z ⇒ V0x + V1y < V0x + V2z
(conjecture "thm_2Einteger_2EINT__LT__LADD__IMP" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2z" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Einteger_2Eint__lt" "V1y" "V2z") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__add" "V0x" "V1y") ("c_2Einteger_2Eint__add" "V0x" "V2z"))))))))))
; integer.INT_LT_MUL: ∀V0x V1y. int_0 < V0x ∧ int_0 < V1y ⇒ int_0 < V0x * V1y
(conjecture "thm_2Einteger_2EINT__LT__MUL" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__lt" "c_2Einteger_2Eint__0" "V0x") ("c_2Einteger_2Eint__lt" "c_2Einteger_2Eint__0" "V1y")) ("c_2Einteger_2Eint__lt" "c_2Einteger_2Eint__0" ("c_2Einteger_2Eint__mul" "V0x" "V1y"))))))))
; integer.int_of_num: (0 = int_0) ∧ ∀V0n. &SUC V0n = &V0n + int_1
(conjecture "thm_2Einteger_2Eint__of__num" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "c_2Einteger_2Eint__0") (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0n" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__of__num" ("c_2Enum_2ESUC" "V0n")) ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__of__num" "V0n") "c_2Einteger_2Eint__1"))))))
; integer.NUM_POSINT_EX: ∀V0t. ¬(V0t < int_0) ⇒ ∃V1n. V0t = &V1n
(conjecture "thm_2Einteger_2ENUM__POSINT__EX" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0t" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" ("c_2Einteger_2Eint__lt" "V0t" "c_2Einteger_2Eint__0")) (("c_2Ebool_2E_3F" "ty_2Enum_2Enum") (lambda "V1n" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0t" ("c_2Einteger_2Eint__of__num" "V1n"))))))))
; integer.int_sub: ∀V0x V1y. V0x − V1y = V0x + -V1y
(axiom "thm_2Einteger_2Eint__sub" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__sub" "V0x" "V1y") ("c_2Einteger_2Eint__add" "V0x" ("c_2Einteger_2Eint__neg" "V1y"))))))))
; integer.int_le: ∀V0x V1y. V0x ≤ V1y ⇔ ¬(V1y < V0x)
(axiom "thm_2Einteger_2Eint__le" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" "V0x" "V1y") ("c_2Ebool_2E_7E" ("c_2Einteger_2Eint__lt" "V1y" "V0x"))))))))
; integer.int_gt: ∀V0x V1y. V0x > V1y ⇔ V1y < V0x
(axiom "thm_2Einteger_2Eint__gt" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__gt" "V0x" "V1y") ("c_2Einteger_2Eint__lt" "V1y" "V0x")))))))
; integer.int_ge: ∀V0x V1y. V0x ≥ V1y ⇔ V1y ≤ V0x
(axiom "thm_2Einteger_2Eint__ge" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__ge" "V0x" "V1y") ("c_2Einteger_2Eint__le" "V1y" "V0x")))))))
; integer.INT_0: int_0 = 0
(conjecture "thm_2Einteger_2EINT__0" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "c_2Einteger_2Eint__0" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")))
; integer.INT_1: int_1 = 1
(conjecture "thm_2Einteger_2EINT__1" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "c_2Einteger_2Eint__1" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO")))))
; integer.INT_ADD_LID: ∀V0x. 0 + V0x = V0x
(conjecture "thm_2Einteger_2EINT__ADD__LID" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0x") "V0x"))))
; integer.INT_ADD_RID: ∀V0x. V0x + 0 = V0x
(conjecture "thm_2Einteger_2EINT__ADD__RID" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__add" "V0x" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) "V0x"))))
; integer.INT_ADD_LINV: ∀V0x. -V0x + V0x = 0
(conjecture "thm_2Einteger_2EINT__ADD__LINV" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__neg" "V0x") "V0x") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")))))
; integer.INT_ADD_RINV: ∀V0x. V0x + -V0x = 0
(conjecture "thm_2Einteger_2EINT__ADD__RINV" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__add" "V0x" ("c_2Einteger_2Eint__neg" "V0x")) ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")))))
; integer.INT_MUL_LID: ∀V0x. 1 * V0x = V0x
(conjecture "thm_2Einteger_2EINT__MUL__LID" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mul" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO"))) "V0x") "V0x"))))
; integer.INT_MUL_RID: ∀V0x. V0x * 1 = V0x
(conjecture "thm_2Einteger_2EINT__MUL__RID" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mul" "V0x" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO")))) "V0x"))))
; integer.INT_RDISTRIB: ∀V0x V1y V2z. (V0x + V1y) * V2z = V0x * V2z + V1y * V2z
(conjecture "thm_2Einteger_2EINT__RDISTRIB" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2z" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mul" ("c_2Einteger_2Eint__add" "V0x" "V1y") "V2z") ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__mul" "V0x" "V2z") ("c_2Einteger_2Eint__mul" "V1y" "V2z"))))))))))
; integer.INT_EQ_LADD: ∀V0x V1y V2z. (V0x + V1y = V0x + V2z) ⇔ (V1y = V2z)
(conjecture "thm_2Einteger_2EINT__EQ__LADD" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2z" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__add" "V0x" "V1y") ("c_2Einteger_2Eint__add" "V0x" "V2z")) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V1y" "V2z")))))))))
; integer.INT_EQ_RADD: ∀V0x V1y V2z. (V0x + V2z = V1y + V2z) ⇔ (V0x = V1y)
(conjecture "thm_2Einteger_2EINT__EQ__RADD" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2z" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__add" "V0x" "V2z") ("c_2Einteger_2Eint__add" "V1y" "V2z")) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0x" "V1y")))))))))
; integer.INT_ADD_LID_UNIQ: ∀V0x V1y. (V0x + V1y = V1y) ⇔ (V0x = 0)
(conjecture "thm_2Einteger_2EINT__ADD__LID__UNIQ" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__add" "V0x" "V1y") "V1y") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0x" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))))))))
; integer.INT_ADD_RID_UNIQ: ∀V0x V1y. (V0x + V1y = V0x) ⇔ (V1y = 0)
(conjecture "thm_2Einteger_2EINT__ADD__RID__UNIQ" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__add" "V0x" "V1y") "V0x") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V1y" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))))))))
; integer.INT_LNEG_UNIQ: ∀V0x V1y. (V0x + V1y = 0) ⇔ (V0x = -V1y)
(conjecture "thm_2Einteger_2EINT__LNEG__UNIQ" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__add" "V0x" "V1y") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0x" ("c_2Einteger_2Eint__neg" "V1y"))))))))
; integer.INT_RNEG_UNIQ: ∀V0x V1y. (V0x + V1y = 0) ⇔ (V1y = -V0x)
(conjecture "thm_2Einteger_2EINT__RNEG__UNIQ" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__add" "V0x" "V1y") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V1y" ("c_2Einteger_2Eint__neg" "V0x"))))))))
; integer.INT_NEG_ADD: ∀V0x V1y. -(V0x + V1y) = -V0x + -V1y
(conjecture "thm_2Einteger_2EINT__NEG__ADD" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__add" "V0x" "V1y")) ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__neg" "V0x") ("c_2Einteger_2Eint__neg" "V1y"))))))))
; integer.INT_MUL_LZERO: ∀V0x. 0 * V0x = 0
(conjecture "thm_2Einteger_2EINT__MUL__LZERO" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mul" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0x") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")))))
; integer.INT_MUL_RZERO: ∀V0x. V0x * 0 = 0
(conjecture "thm_2Einteger_2EINT__MUL__RZERO" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mul" "V0x" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")))))
; integer.INT_NEG_LMUL: ∀V0x V1y. -(V0x * V1y) = -V0x * V1y
(conjecture "thm_2Einteger_2EINT__NEG__LMUL" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__mul" "V0x" "V1y")) ("c_2Einteger_2Eint__mul" ("c_2Einteger_2Eint__neg" "V0x") "V1y")))))))
; integer.INT_NEG_RMUL: ∀V0x V1y. -(V0x * V1y) = V0x * -V1y
(conjecture "thm_2Einteger_2EINT__NEG__RMUL" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__mul" "V0x" "V1y")) ("c_2Einteger_2Eint__mul" "V0x" ("c_2Einteger_2Eint__neg" "V1y"))))))))
; integer.INT_NEGNEG: ∀V0x. - -V0x = V0x
(conjecture "thm_2Einteger_2EINT__NEGNEG" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__neg" "V0x")) "V0x"))))
; integer.INT_NEG_MUL2: ∀V0x V1y. -V0x * -V1y = V0x * V1y
(conjecture "thm_2Einteger_2EINT__NEG__MUL2" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mul" ("c_2Einteger_2Eint__neg" "V0x") ("c_2Einteger_2Eint__neg" "V1y")) ("c_2Einteger_2Eint__mul" "V0x" "V1y")))))))
; integer.INT_LT_LADD: ∀V0x V1y V2z. V0x + V1y < V0x + V2z ⇔ V1y < V2z
(conjecture "thm_2Einteger_2EINT__LT__LADD" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2z" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__add" "V0x" "V1y") ("c_2Einteger_2Eint__add" "V0x" "V2z")) ("c_2Einteger_2Eint__lt" "V1y" "V2z")))))))))
; integer.INT_LT_RADD: ∀V0x V1y V2z. V0x + V2z < V1y + V2z ⇔ V0x < V1y
(conjecture "thm_2Einteger_2EINT__LT__RADD" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2z" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__add" "V0x" "V2z") ("c_2Einteger_2Eint__add" "V1y" "V2z")) ("c_2Einteger_2Eint__lt" "V0x" "V1y")))))))))
; integer.INT_NOT_LT: ∀V0x V1y. ¬(V0x < V1y) ⇔ V1y ≤ V0x
(conjecture "thm_2Einteger_2EINT__NOT__LT" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Ebool_2E_7E" ("c_2Einteger_2Eint__lt" "V0x" "V1y")) ("c_2Einteger_2Eint__le" "V1y" "V0x")))))))
; integer.INT_LT_ANTISYM: ∀V0x V1y. ¬(V0x < V1y ∧ V1y < V0x)
(conjecture "thm_2Einteger_2EINT__LT__ANTISYM" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" ("c_2Ebool_2E_7E" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__lt" "V0x" "V1y") ("c_2Einteger_2Eint__lt" "V1y" "V0x"))))))))
; integer.INT_LT_GT: ∀V0x V1y. V0x < V1y ⇒ ¬(V1y < V0x)
(conjecture "thm_2Einteger_2EINT__LT__GT" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Einteger_2Eint__lt" "V0x" "V1y") ("c_2Ebool_2E_7E" ("c_2Einteger_2Eint__lt" "V1y" "V0x"))))))))
; integer.INT_NOT_LE: ∀V0x V1y. ¬(V0x ≤ V1y) ⇔ V1y < V0x
(conjecture "thm_2Einteger_2EINT__NOT__LE" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Ebool_2E_7E" ("c_2Einteger_2Eint__le" "V0x" "V1y")) ("c_2Einteger_2Eint__lt" "V1y" "V0x")))))))
; integer.INT_LE_TOTAL: ∀V0x V1y. V0x ≤ V1y ∨ V1y ≤ V0x
(conjecture "thm_2Einteger_2EINT__LE__TOTAL" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" ("c_2Ebool_2E_5C_2F" ("c_2Einteger_2Eint__le" "V0x" "V1y") ("c_2Einteger_2Eint__le" "V1y" "V0x")))))))
; integer.INT_LET_TOTAL: ∀V0x V1y. V0x ≤ V1y ∨ V1y < V0x
(conjecture "thm_2Einteger_2EINT__LET__TOTAL" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" ("c_2Ebool_2E_5C_2F" ("c_2Einteger_2Eint__le" "V0x" "V1y") ("c_2Einteger_2Eint__lt" "V1y" "V0x")))))))
; integer.INT_LTE_TOTAL: ∀V0x V1y. V0x < V1y ∨ V1y ≤ V0x
(conjecture "thm_2Einteger_2EINT__LTE__TOTAL" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" ("c_2Ebool_2E_5C_2F" ("c_2Einteger_2Eint__lt" "V0x" "V1y") ("c_2Einteger_2Eint__le" "V1y" "V0x")))))))
; integer.INT_LE_REFL: ∀V0x. V0x ≤ V0x
(conjecture "thm_2Einteger_2EINT__LE__REFL" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" ("c_2Einteger_2Eint__le" "V0x" "V0x"))))
; integer.INT_LE_LT: ∀V0x V1y. V0x ≤ V1y ⇔ V0x < V1y ∨ (V0x = V1y)
(conjecture "thm_2Einteger_2EINT__LE__LT" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" "V0x" "V1y") ("c_2Ebool_2E_5C_2F" ("c_2Einteger_2Eint__lt" "V0x" "V1y") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0x" "V1y"))))))))
; integer.INT_LT_LE: ∀V0x V1y. V0x < V1y ⇔ V0x ≤ V1y ∧ V0x ≠ V1y
(conjecture "thm_2Einteger_2EINT__LT__LE" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" "V0x" "V1y") ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__le" "V0x" "V1y") ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0x" "V1y")))))))))
; integer.INT_LT_IMP_LE: ∀V0x V1y. V0x < V1y ⇒ V0x ≤ V1y
(conjecture "thm_2Einteger_2EINT__LT__IMP__LE" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Einteger_2Eint__lt" "V0x" "V1y") ("c_2Einteger_2Eint__le" "V0x" "V1y")))))))
; integer.INT_LTE_TRANS: ∀V0x V1y V2z. V0x < V1y ∧ V1y ≤ V2z ⇒ V0x < V2z
(conjecture "thm_2Einteger_2EINT__LTE__TRANS" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2z" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__lt" "V0x" "V1y") ("c_2Einteger_2Eint__le" "V1y" "V2z")) ("c_2Einteger_2Eint__lt" "V0x" "V2z")))))))))
; integer.INT_LET_TRANS: ∀V0x V1y V2z. V0x ≤ V1y ∧ V1y < V2z ⇒ V0x < V2z
(conjecture "thm_2Einteger_2EINT__LET__TRANS" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2z" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__le" "V0x" "V1y") ("c_2Einteger_2Eint__lt" "V1y" "V2z")) ("c_2Einteger_2Eint__lt" "V0x" "V2z")))))))))
; integer.INT_LE_TRANS: ∀V0x V1y V2z. V0x ≤ V1y ∧ V1y ≤ V2z ⇒ V0x ≤ V2z
(conjecture "thm_2Einteger_2EINT__LE__TRANS" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2z" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__le" "V0x" "V1y") ("c_2Einteger_2Eint__le" "V1y" "V2z")) ("c_2Einteger_2Eint__le" "V0x" "V2z")))))))))
; integer.INT_LE_ANTISYM: ∀V0x V1y. V0x ≤ V1y ∧ V1y ≤ V0x ⇔ (V0x = V1y)
(conjecture "thm_2Einteger_2EINT__LE__ANTISYM" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__le" "V0x" "V1y") ("c_2Einteger_2Eint__le" "V1y" "V0x")) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0x" "V1y")))))))
; integer.INT_LET_ANTISYM: ∀V0x V1y. ¬(V0x < V1y ∧ V1y ≤ V0x)
(conjecture "thm_2Einteger_2EINT__LET__ANTISYM" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" ("c_2Ebool_2E_7E" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__lt" "V0x" "V1y") ("c_2Einteger_2Eint__le" "V1y" "V0x"))))))))
; integer.INT_LTE_ANTSYM: ∀V0x V1y. ¬(V0x ≤ V1y ∧ V1y < V0x)
(conjecture "thm_2Einteger_2EINT__LTE__ANTSYM" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" ("c_2Ebool_2E_7E" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__le" "V0x" "V1y") ("c_2Einteger_2Eint__lt" "V1y" "V0x"))))))))
; integer.INT_NEG_LT0: ∀V0x. -V0x < 0 ⇔ 0 < V0x
(conjecture "thm_2Einteger_2EINT__NEG__LT0" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__neg" "V0x") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0x")))))
; integer.INT_NEG_GT0: ∀V0x. 0 < -V0x ⇔ V0x < 0
(conjecture "thm_2Einteger_2EINT__NEG__GT0" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__neg" "V0x")) ("c_2Einteger_2Eint__lt" "V0x" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))))))
; integer.INT_NEG_LE0: ∀V0x. -V0x ≤ 0 ⇔ 0 ≤ V0x
(conjecture "thm_2Einteger_2EINT__NEG__LE0" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__neg" "V0x") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0x")))))
; integer.INT_NEG_GE0: ∀V0x. 0 ≤ -V0x ⇔ V0x ≤ 0
(conjecture "thm_2Einteger_2EINT__NEG__GE0" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__neg" "V0x")) ("c_2Einteger_2Eint__le" "V0x" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))))))
; integer.INT_LT_NEGTOTAL: ∀V0x. (V0x = 0) ∨ 0 < V0x ∨ 0 < -V0x
(conjecture "thm_2Einteger_2EINT__LT__NEGTOTAL" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" ("c_2Ebool_2E_5C_2F" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0x" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Ebool_2E_5C_2F" ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0x") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__neg" "V0x")))))))
; integer.INT_LE_NEGTOTAL: ∀V0x. 0 ≤ V0x ∨ 0 ≤ -V0x
(conjecture "thm_2Einteger_2EINT__LE__NEGTOTAL" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" ("c_2Ebool_2E_5C_2F" ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0x") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__neg" "V0x"))))))
; integer.INT_LE_MUL: ∀V0x V1y. 0 ≤ V0x ∧ 0 ≤ V1y ⇒ 0 ≤ V0x * V1y
(conjecture "thm_2Einteger_2EINT__LE__MUL" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0x") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V1y")) ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__mul" "V0x" "V1y"))))))))
; integer.INT_LE_SQUARE: ∀V0x. 0 ≤ V0x * V0x
(conjecture "thm_2Einteger_2EINT__LE__SQUARE" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__mul" "V0x" "V0x")))))
; integer.INT_LE_01: 0 ≤ 1
(conjecture "thm_2Einteger_2EINT__LE__01" ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO")))))
; integer.INT_LT_01: 0 < 1
(conjecture "thm_2Einteger_2EINT__LT__01" ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO")))))
; integer.INT_LE_LADD: ∀V0x V1y V2z. V0x + V1y ≤ V0x + V2z ⇔ V1y ≤ V2z
(conjecture "thm_2Einteger_2EINT__LE__LADD" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2z" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__add" "V0x" "V1y") ("c_2Einteger_2Eint__add" "V0x" "V2z")) ("c_2Einteger_2Eint__le" "V1y" "V2z")))))))))
; integer.INT_LE_RADD: ∀V0x V1y V2z. V0x + V2z ≤ V1y + V2z ⇔ V0x ≤ V1y
(conjecture "thm_2Einteger_2EINT__LE__RADD" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2z" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__add" "V0x" "V2z") ("c_2Einteger_2Eint__add" "V1y" "V2z")) ("c_2Einteger_2Eint__le" "V0x" "V1y")))))))))
; integer.INT_LT_ADD2: ∀V0w V1x V2y V3z. V0w < V1x ∧ V2y < V3z ⇒ V0w + V2y < V1x + V3z
(conjecture "thm_2Einteger_2EINT__LT__ADD2" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0w" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V3z" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__lt" "V0w" "V1x") ("c_2Einteger_2Eint__lt" "V2y" "V3z")) ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__add" "V0w" "V2y") ("c_2Einteger_2Eint__add" "V1x" "V3z"))))))))))))
; integer.INT_LE_ADD2: ∀V0w V1x V2y V3z. V0w ≤ V1x ∧ V2y ≤ V3z ⇒ V0w + V2y ≤ V1x + V3z
(conjecture "thm_2Einteger_2EINT__LE__ADD2" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0w" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V3z" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__le" "V0w" "V1x") ("c_2Einteger_2Eint__le" "V2y" "V3z")) ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__add" "V0w" "V2y") ("c_2Einteger_2Eint__add" "V1x" "V3z"))))))))))))
; integer.INT_LE_ADD: ∀V0x V1y. 0 ≤ V0x ∧ 0 ≤ V1y ⇒ 0 ≤ V0x + V1y
(conjecture "thm_2Einteger_2EINT__LE__ADD" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0x") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V1y")) ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__add" "V0x" "V1y"))))))))
; integer.INT_LT_ADD: ∀V0x V1y. 0 < V0x ∧ 0 < V1y ⇒ 0 < V0x + V1y
(conjecture "thm_2Einteger_2EINT__LT__ADD" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0x") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V1y")) ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__add" "V0x" "V1y"))))))))
; integer.INT_LT_ADDNEG: ∀V0x V1y V2z. V1y < V0x + -V2z ⇔ V1y + V2z < V0x
(conjecture "thm_2Einteger_2EINT__LT__ADDNEG" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2z" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" "V1y" ("c_2Einteger_2Eint__add" "V0x" ("c_2Einteger_2Eint__neg" "V2z"))) ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__add" "V1y" "V2z") "V0x")))))))))
; integer.INT_LT_ADDNEG2: ∀V0x V1y V2z. V0x + -V1y < V2z ⇔ V0x < V2z + V1y
(conjecture "thm_2Einteger_2EINT__LT__ADDNEG2" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2z" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__add" "V0x" ("c_2Einteger_2Eint__neg" "V1y")) "V2z") ("c_2Einteger_2Eint__lt" "V0x" ("c_2Einteger_2Eint__add" "V2z" "V1y"))))))))))
; integer.INT_LT_ADD1: ∀V0x V1y. V0x ≤ V1y ⇒ V0x < V1y + 1
(conjecture "thm_2Einteger_2EINT__LT__ADD1" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Einteger_2Eint__le" "V0x" "V1y") ("c_2Einteger_2Eint__lt" "V0x" ("c_2Einteger_2Eint__add" "V1y" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO")))))))))))
; integer.INT_SUB_ADD: ∀V0x V1y. V0x − V1y + V1y = V0x
(conjecture "thm_2Einteger_2EINT__SUB__ADD" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__sub" "V0x" "V1y") "V1y") "V0x"))))))
; integer.INT_SUB_ADD2: ∀V0x V1y. V1y + (V0x − V1y) = V0x
(conjecture "thm_2Einteger_2EINT__SUB__ADD2" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__add" "V1y" ("c_2Einteger_2Eint__sub" "V0x" "V1y")) "V0x"))))))
; integer.INT_SUB_REFL: ∀V0x. V0x − V0x = 0
(conjecture "thm_2Einteger_2EINT__SUB__REFL" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__sub" "V0x" "V0x") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")))))
; integer.INT_SUB_0: ∀V0x V1y. (V0x − V1y = 0) ⇔ (V0x = V1y)
(conjecture "thm_2Einteger_2EINT__SUB__0" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__sub" "V0x" "V1y") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0x" "V1y")))))))
; integer.INT_LE_DOUBLE: ∀V0x. 0 ≤ V0x + V0x ⇔ 0 ≤ V0x
(conjecture "thm_2Einteger_2EINT__LE__DOUBLE" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__add" "V0x" "V0x")) ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0x")))))
; integer.INT_LE_NEGL: ∀V0x. -V0x ≤ V0x ⇔ 0 ≤ V0x
(conjecture "thm_2Einteger_2EINT__LE__NEGL" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__neg" "V0x") "V0x") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0x")))))
; integer.INT_LE_NEGR: ∀V0x. V0x ≤ -V0x ⇔ V0x ≤ 0
(conjecture "thm_2Einteger_2EINT__LE__NEGR" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" "V0x" ("c_2Einteger_2Eint__neg" "V0x")) ("c_2Einteger_2Eint__le" "V0x" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))))))
; integer.INT_NEG_EQ0: ∀V0x. (-V0x = 0) ⇔ (V0x = 0)
(conjecture "thm_2Einteger_2EINT__NEG__EQ0" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__neg" "V0x") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0x" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))))))
; integer.INT_NEG_0: -0 = 0
(conjecture "thm_2Einteger_2EINT__NEG__0" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")))
; integer.INT_NEG_SUB: ∀V0x V1y. -(V0x − V1y) = V1y − V0x
(conjecture "thm_2Einteger_2EINT__NEG__SUB" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__sub" "V0x" "V1y")) ("c_2Einteger_2Eint__sub" "V1y" "V0x")))))))
; integer.INT_SUB_LT: ∀V0x V1y. 0 < V0x − V1y ⇔ V1y < V0x
(conjecture "thm_2Einteger_2EINT__SUB__LT" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__sub" "V0x" "V1y")) ("c_2Einteger_2Eint__lt" "V1y" "V0x")))))))
; integer.INT_SUB_LE: ∀V0x V1y. 0 ≤ V0x − V1y ⇔ V1y ≤ V0x
(conjecture "thm_2Einteger_2EINT__SUB__LE" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__sub" "V0x" "V1y")) ("c_2Einteger_2Eint__le" "V1y" "V0x")))))))
; integer.INT_ADD_SUB: ∀V0x V1y. V0x + V1y − V0x = V1y
(conjecture "thm_2Einteger_2EINT__ADD__SUB" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__sub" ("c_2Einteger_2Eint__add" "V0x" "V1y") "V0x") "V1y"))))))
; integer.INT_SUB_LDISTRIB: ∀V0x V1y V2z. V0x * (V1y − V2z) = V0x * V1y − V0x * V2z
(conjecture "thm_2Einteger_2EINT__SUB__LDISTRIB" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2z" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mul" "V0x" ("c_2Einteger_2Eint__sub" "V1y" "V2z")) ("c_2Einteger_2Eint__sub" ("c_2Einteger_2Eint__mul" "V0x" "V1y") ("c_2Einteger_2Eint__mul" "V0x" "V2z"))))))))))
; integer.INT_SUB_RDISTRIB: ∀V0x V1y V2z. (V0x − V1y) * V2z = V0x * V2z − V1y * V2z
(conjecture "thm_2Einteger_2EINT__SUB__RDISTRIB" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2z" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mul" ("c_2Einteger_2Eint__sub" "V0x" "V1y") "V2z") ("c_2Einteger_2Eint__sub" ("c_2Einteger_2Eint__mul" "V0x" "V2z") ("c_2Einteger_2Eint__mul" "V1y" "V2z"))))))))))
; integer.INT_NEG_EQ: ∀V0x V1y. (-V0x = V1y) ⇔ (V0x = -V1y)
(conjecture "thm_2Einteger_2EINT__NEG__EQ" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__neg" "V0x") "V1y") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0x" ("c_2Einteger_2Eint__neg" "V1y"))))))))
; integer.INT_NEG_MINUS1: ∀V0x. -V0x = -1 * V0x
(conjecture "thm_2Einteger_2EINT__NEG__MINUS1" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__neg" "V0x") ("c_2Einteger_2Eint__mul" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO")))) "V0x")))))
; integer.INT_LT_IMP_NE: ∀V0x V1y. V0x < V1y ⇒ V0x ≠ V1y
(conjecture "thm_2Einteger_2EINT__LT__IMP__NE" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Einteger_2Eint__lt" "V0x" "V1y") ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0x" "V1y"))))))))
; integer.INT_LE_ADDR: ∀V0x V1y. V0x ≤ V0x + V1y ⇔ 0 ≤ V1y
(conjecture "thm_2Einteger_2EINT__LE__ADDR" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" "V0x" ("c_2Einteger_2Eint__add" "V0x" "V1y")) ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V1y")))))))
; integer.INT_LE_ADDL: ∀V0x V1y. V1y ≤ V0x + V1y ⇔ 0 ≤ V0x
(conjecture "thm_2Einteger_2EINT__LE__ADDL" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" "V1y" ("c_2Einteger_2Eint__add" "V0x" "V1y")) ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0x")))))))
; integer.INT_LT_ADDR: ∀V0x V1y. V0x < V0x + V1y ⇔ 0 < V1y
(conjecture "thm_2Einteger_2EINT__LT__ADDR" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" "V0x" ("c_2Einteger_2Eint__add" "V0x" "V1y")) ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V1y")))))))
; integer.INT_LT_ADDL: ∀V0x V1y. V1y < V0x + V1y ⇔ 0 < V0x
(conjecture "thm_2Einteger_2EINT__LT__ADDL" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" "V1y" ("c_2Einteger_2Eint__add" "V0x" "V1y")) ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0x")))))))
; integer.INT_ENTIRE: ∀V0x V1y. (V0x * V1y = 0) ⇔ (V0x = 0) ∨ (V1y = 0)
(conjecture "thm_2Einteger_2EINT__ENTIRE" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mul" "V0x" "V1y") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Ebool_2E_5C_2F" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0x" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V1y" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")))))))))
; integer.INT_EQ_LMUL: ∀V0x V1y V2z. (V0x * V1y = V0x * V2z) ⇔ (V0x = 0) ∨ (V1y = V2z)
(conjecture "thm_2Einteger_2EINT__EQ__LMUL" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2z" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mul" "V0x" "V1y") ("c_2Einteger_2Eint__mul" "V0x" "V2z")) ("c_2Ebool_2E_5C_2F" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0x" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V1y" "V2z"))))))))))
; integer.INT_EQ_RMUL: ∀V0x V1y V2z. (V0x * V2z = V1y * V2z) ⇔ (V2z = 0) ∨ (V0x = V1y)
(conjecture "thm_2Einteger_2EINT__EQ__RMUL" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2z" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mul" "V0x" "V2z") ("c_2Einteger_2Eint__mul" "V1y" "V2z")) ("c_2Ebool_2E_5C_2F" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V2z" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0x" "V1y"))))))))))
; integer.INT: ∀V0n. &SUC V0n = &V0n + 1
(conjecture "thm_2Einteger_2EINT" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0n" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__of__num" ("c_2Enum_2ESUC" "V0n")) ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__of__num" "V0n") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO"))))))))
; integer.INT_POS: ∀V0n. 0 ≤ &V0n
(conjecture "thm_2Einteger_2EINT__POS" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0n" "ty_2Enum_2Enum" ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" "V0n")))))
; integer.INT_LE: ∀V0m V1n. &V0m ≤ &V1n ⇔ V0m ≤ V1n
(conjecture "thm_2Einteger_2EINT__LE" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0m" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1n" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "V0m") ("c_2Einteger_2Eint__of__num" "V1n")) ("c_2Earithmetic_2E_3C_3D" "V0m" "V1n")))))))
; integer.INT_LT: ∀V0m V1n. &V0m < &V1n ⇔ V0m < V1n
(conjecture "thm_2Einteger_2EINT__LT" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0m" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1n" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "V0m") ("c_2Einteger_2Eint__of__num" "V1n")) ("c_2Eprim__rec_2E_3C" "V0m" "V1n")))))))
; integer.INT_INJ: ∀V0m V1n. (&V0m = &V1n) ⇔ (V0m = V1n)
(conjecture "thm_2Einteger_2EINT__INJ" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0m" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1n" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__of__num" "V0m") ("c_2Einteger_2Eint__of__num" "V1n")) (("c_2Emin_2E_3D" "ty_2Enum_2Enum") "V0m" "V1n")))))))
; integer.INT_ADD: ∀V0m V1n. &V0m + &V1n = &(V0m + V1n)
(conjecture "thm_2Einteger_2EINT__ADD" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0m" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1n" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__of__num" "V0m") ("c_2Einteger_2Eint__of__num" "V1n")) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2E_2B" "V0m" "V1n"))))))))
; integer.INT_MUL: ∀V0m V1n. &V0m * &V1n = &(V0m * V1n)
(conjecture "thm_2Einteger_2EINT__MUL" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0m" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1n" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mul" ("c_2Einteger_2Eint__of__num" "V0m") ("c_2Einteger_2Eint__of__num" "V1n")) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2E_2A" "V0m" "V1n"))))))))
; integer.INT_LT_NZ: ∀V0n. &V0n ≠ 0 ⇔ 0 < &V0n
(conjecture "thm_2Einteger_2EINT__LT__NZ" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0n" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__of__num" "V0n") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" "V0n"))))))
; integer.INT_NZ_IMP_LT: ∀V0n. V0n ≠ 0 ⇒ 0 < &V0n
(conjecture "thm_2Einteger_2EINT__NZ__IMP__LT" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0n" "ty_2Enum_2Enum" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Enum_2Enum") "V0n" "c_2Enum_2E0")) ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" "V0n"))))))
; integer.INT_DOUBLE: ∀V0x. V0x + V0x = 2 * V0x
(conjecture "thm_2Einteger_2EINT__DOUBLE" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__add" "V0x" "V0x") ("c_2Einteger_2Eint__mul" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "c_2Earithmetic_2EZERO"))) "V0x")))))
; integer.INT_SUB_SUB: ∀V0x V1y. V0x − V1y − V0x = -V1y
(conjecture "thm_2Einteger_2EINT__SUB__SUB" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__sub" ("c_2Einteger_2Eint__sub" "V0x" "V1y") "V0x") ("c_2Einteger_2Eint__neg" "V1y")))))))
; integer.INT_LT_ADD_SUB: ∀V0x V1y V2z. V0x + V1y < V2z ⇔ V0x < V2z − V1y
(conjecture "thm_2Einteger_2EINT__LT__ADD__SUB" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2z" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__add" "V0x" "V1y") "V2z") ("c_2Einteger_2Eint__lt" "V0x" ("c_2Einteger_2Eint__sub" "V2z" "V1y"))))))))))
; integer.INT_LT_SUB_RADD: ∀V0x V1y V2z. V0x − V1y < V2z ⇔ V0x < V2z + V1y
(conjecture "thm_2Einteger_2EINT__LT__SUB__RADD" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2z" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__sub" "V0x" "V1y") "V2z") ("c_2Einteger_2Eint__lt" "V0x" ("c_2Einteger_2Eint__add" "V2z" "V1y"))))))))))
; integer.INT_LT_SUB_LADD: ∀V0x V1y V2z. V0x < V1y − V2z ⇔ V0x + V2z < V1y
(conjecture "thm_2Einteger_2EINT__LT__SUB__LADD" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2z" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" "V0x" ("c_2Einteger_2Eint__sub" "V1y" "V2z")) ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__add" "V0x" "V2z") "V1y")))))))))
; integer.INT_LE_SUB_LADD: ∀V0x V1y V2z. V0x ≤ V1y − V2z ⇔ V0x + V2z ≤ V1y
(conjecture "thm_2Einteger_2EINT__LE__SUB__LADD" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2z" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" "V0x" ("c_2Einteger_2Eint__sub" "V1y" "V2z")) ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__add" "V0x" "V2z") "V1y")))))))))
; integer.INT_LE_SUB_RADD: ∀V0x V1y V2z. V0x − V1y ≤ V2z ⇔ V0x ≤ V2z + V1y
(conjecture "thm_2Einteger_2EINT__LE__SUB__RADD" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2z" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__sub" "V0x" "V1y") "V2z") ("c_2Einteger_2Eint__le" "V0x" ("c_2Einteger_2Eint__add" "V2z" "V1y"))))))))))
; integer.INT_LT_NEG: ∀V0x V1y. -V0x < -V1y ⇔ V1y < V0x
(conjecture "thm_2Einteger_2EINT__LT__NEG" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__neg" "V0x") ("c_2Einteger_2Eint__neg" "V1y")) ("c_2Einteger_2Eint__lt" "V1y" "V0x")))))))
; integer.INT_LE_NEG: ∀V0x V1y. -V0x ≤ -V1y ⇔ V1y ≤ V0x
(conjecture "thm_2Einteger_2EINT__LE__NEG" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__neg" "V0x") ("c_2Einteger_2Eint__neg" "V1y")) ("c_2Einteger_2Eint__le" "V1y" "V0x")))))))
; integer.INT_ADD2_SUB2: ∀V0a V1b V2c V3d. V0a + V1b − (V2c + V3d) = V0a − V2c + (V1b − V3d)
(conjecture "thm_2Einteger_2EINT__ADD2__SUB2" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0a" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1b" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2c" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V3d" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__sub" ("c_2Einteger_2Eint__add" "V0a" "V1b") ("c_2Einteger_2Eint__add" "V2c" "V3d")) ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__sub" "V0a" "V2c") ("c_2Einteger_2Eint__sub" "V1b" "V3d"))))))))))))
; integer.INT_SUB_LZERO: ∀V0x. 0 − V0x = -V0x
(conjecture "thm_2Einteger_2EINT__SUB__LZERO" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__sub" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0x") ("c_2Einteger_2Eint__neg" "V0x")))))
; integer.INT_SUB_RZERO: ∀V0x. V0x − 0 = V0x
(conjecture "thm_2Einteger_2EINT__SUB__RZERO" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__sub" "V0x" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) "V0x"))))
; integer.INT_LET_ADD2: ∀V0w V1x V2y V3z. V0w ≤ V1x ∧ V2y < V3z ⇒ V0w + V2y < V1x + V3z
(conjecture "thm_2Einteger_2EINT__LET__ADD2" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0w" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V3z" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__le" "V0w" "V1x") ("c_2Einteger_2Eint__lt" "V2y" "V3z")) ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__add" "V0w" "V2y") ("c_2Einteger_2Eint__add" "V1x" "V3z"))))))))))))
; integer.INT_LTE_ADD2: ∀V0w V1x V2y V3z. V0w < V1x ∧ V2y ≤ V3z ⇒ V0w + V2y < V1x + V3z
(conjecture "thm_2Einteger_2EINT__LTE__ADD2" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0w" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V3z" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__lt" "V0w" "V1x") ("c_2Einteger_2Eint__le" "V2y" "V3z")) ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__add" "V0w" "V2y") ("c_2Einteger_2Eint__add" "V1x" "V3z"))))))))))))
; integer.INT_LET_ADD: ∀V0x V1y. 0 ≤ V0x ∧ 0 < V1y ⇒ 0 < V0x + V1y
(conjecture "thm_2Einteger_2EINT__LET__ADD" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0x") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V1y")) ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__add" "V0x" "V1y"))))))))
; integer.INT_LTE_ADD: ∀V0x V1y. 0 < V0x ∧ 0 ≤ V1y ⇒ 0 < V0x + V1y
(conjecture "thm_2Einteger_2EINT__LTE__ADD" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0x") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V1y")) ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__add" "V0x" "V1y"))))))))
; integer.INT_LT_MUL2: ∀V0x1 V1x2 V2y1 V3y2.     0 ≤ V0x1 ∧ 0 ≤ V2y1 ∧ V0x1 < V1x2 ∧ V2y1 < V3y2 ⇒     V0x1 * V2y1 < V1x2 * V3y2
(conjecture "thm_2Einteger_2EINT__LT__MUL2" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x1" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1x2" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2y1" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V3y2" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0x1") ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V2y1") ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__lt" "V0x1" "V1x2") ("c_2Einteger_2Eint__lt" "V2y1" "V3y2")))) ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__mul" "V0x1" "V2y1") ("c_2Einteger_2Eint__mul" "V1x2" "V3y2"))))))))))))
; integer.INT_SUB_LNEG: ∀V0x V1y. -V0x − V1y = -(V0x + V1y)
(conjecture "thm_2Einteger_2EINT__SUB__LNEG" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__sub" ("c_2Einteger_2Eint__neg" "V0x") "V1y") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__add" "V0x" "V1y"))))))))
; integer.INT_SUB_RNEG: ∀V0x V1y. V0x − -V1y = V0x + V1y
(conjecture "thm_2Einteger_2EINT__SUB__RNEG" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__sub" "V0x" ("c_2Einteger_2Eint__neg" "V1y")) ("c_2Einteger_2Eint__add" "V0x" "V1y")))))))
; integer.INT_SUB_NEG2: ∀V0x V1y. -V0x − -V1y = V1y − V0x
(conjecture "thm_2Einteger_2EINT__SUB__NEG2" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__sub" ("c_2Einteger_2Eint__neg" "V0x") ("c_2Einteger_2Eint__neg" "V1y")) ("c_2Einteger_2Eint__sub" "V1y" "V0x")))))))
; integer.INT_SUB_TRIANGLE: ∀V0a V1b V2c. V0a − V1b + (V1b − V2c) = V0a − V2c
(conjecture "thm_2Einteger_2EINT__SUB__TRIANGLE" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0a" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1b" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2c" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__sub" "V0a" "V1b") ("c_2Einteger_2Eint__sub" "V1b" "V2c")) ("c_2Einteger_2Eint__sub" "V0a" "V2c")))))))))
; integer.INT_EQ_SUB_LADD: ∀V0x V1y V2z. (V0x = V1y − V2z) ⇔ (V0x + V2z = V1y)
(conjecture "thm_2Einteger_2EINT__EQ__SUB__LADD" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2z" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0x" ("c_2Einteger_2Eint__sub" "V1y" "V2z")) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__add" "V0x" "V2z") "V1y")))))))))
; integer.INT_EQ_SUB_RADD: ∀V0x V1y V2z. (V0x − V1y = V2z) ⇔ (V0x = V2z + V1y)
(conjecture "thm_2Einteger_2EINT__EQ__SUB__RADD" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2z" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__sub" "V0x" "V1y") "V2z") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0x" ("c_2Einteger_2Eint__add" "V2z" "V1y"))))))))))
; integer.INT_SUB: ∀V0n V1m. V1m ≤ V0n ⇒ (&V0n − &V1m = &(V0n − V1m))
(conjecture "thm_2Einteger_2EINT__SUB" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0n" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1m" "ty_2Enum_2Enum" ("c_2Emin_2E_3D_3D_3E" ("c_2Earithmetic_2E_3C_3D" "V1m" "V0n") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__sub" ("c_2Einteger_2Eint__of__num" "V0n") ("c_2Einteger_2Eint__of__num" "V1m")) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2E_2D" "V0n" "V1m")))))))))
; integer.INT_SUB_SUB2: ∀V0x V1y. V0x − (V0x − V1y) = V1y
(conjecture "thm_2Einteger_2EINT__SUB__SUB2" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__sub" "V0x" ("c_2Einteger_2Eint__sub" "V0x" "V1y")) "V1y"))))))
; integer.INT_ADD_SUB2: ∀V0x V1y. V0x − (V0x + V1y) = -V1y
(conjecture "thm_2Einteger_2EINT__ADD__SUB2" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__sub" "V0x" ("c_2Einteger_2Eint__add" "V0x" "V1y")) ("c_2Einteger_2Eint__neg" "V1y")))))))
; integer.INT_EQ_LMUL2: ∀V0x V1y V2z. V0x ≠ 0 ⇒ ((V1y = V2z) ⇔ (V0x * V1y = V0x * V2z))
(conjecture "thm_2Einteger_2EINT__EQ__LMUL2" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2z" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0x" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V1y" "V2z") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mul" "V0x" "V1y") ("c_2Einteger_2Eint__mul" "V0x" "V2z")))))))))))
; integer.INT_EQ_IMP_LE: ∀V0x V1y. (V0x = V1y) ⇒ V0x ≤ V1y
(conjecture "thm_2Einteger_2EINT__EQ__IMP__LE" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0x" "V1y") ("c_2Einteger_2Eint__le" "V0x" "V1y")))))))
; integer.INT_POS_NZ: ∀V0x. 0 < V0x ⇒ V0x ≠ 0
(conjecture "thm_2Einteger_2EINT__POS__NZ" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0x") ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0x" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")))))))
; integer.INT_EQ_RMUL_IMP: ∀V0x V1y V2z. V2z ≠ 0 ∧ (V0x * V2z = V1y * V2z) ⇒ (V0x = V1y)
(conjecture "thm_2Einteger_2EINT__EQ__RMUL__IMP" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2z" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V2z" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mul" "V0x" "V2z") ("c_2Einteger_2Eint__mul" "V1y" "V2z"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0x" "V1y")))))))))
; integer.INT_EQ_LMUL_IMP: ∀V0x V1y V2z. V0x ≠ 0 ∧ (V0x * V1y = V0x * V2z) ⇒ (V1y = V2z)
(conjecture "thm_2Einteger_2EINT__EQ__LMUL__IMP" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2z" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0x" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mul" "V0x" "V1y") ("c_2Einteger_2Eint__mul" "V0x" "V2z"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V1y" "V2z")))))))))
; integer.INT_DIFFSQ: ∀V0x V1y. (V0x + V1y) * (V0x − V1y) = V0x * V0x − V1y * V1y
(conjecture "thm_2Einteger_2EINT__DIFFSQ" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mul" ("c_2Einteger_2Eint__add" "V0x" "V1y") ("c_2Einteger_2Eint__sub" "V0x" "V1y")) ("c_2Einteger_2Eint__sub" ("c_2Einteger_2Eint__mul" "V0x" "V0x") ("c_2Einteger_2Eint__mul" "V1y" "V1y"))))))))
; integer.INT_POASQ: ∀V0x. 0 < V0x * V0x ⇔ V0x ≠ 0
(conjecture "thm_2Einteger_2EINT__POASQ" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__mul" "V0x" "V0x")) ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0x" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")))))))
; integer.INT_SUMSQ: ∀V0x V1y. (V0x * V0x + V1y * V1y = 0) ⇔ (V0x = 0) ∧ (V1y = 0)
(conjecture "thm_2Einteger_2EINT__SUMSQ" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__mul" "V0x" "V0x") ("c_2Einteger_2Eint__mul" "V1y" "V1y")) ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0x" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V1y" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")))))))))
; integer.INT_EQ_NEG: ∀V0x V1y. (-V0x = -V1y) ⇔ (V0x = V1y)
(conjecture "thm_2Einteger_2EINT__EQ__NEG" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__neg" "V0x") ("c_2Einteger_2Eint__neg" "V1y")) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0x" "V1y")))))))
; integer.INT_LT_CALCULATE: ∀V0n V1m.     (&V0n < &V1m ⇔ V0n < V1m) ∧ (-&V0n < -&V1m ⇔ V1m < V0n) ∧     (-&V0n < &V1m ⇔ V0n ≠ 0 ∨ V1m ≠ 0) ∧ (&V0n < -&V1m ⇔ F)
(conjecture "thm_2Einteger_2EINT__LT__CALCULATE" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0n" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1m" "ty_2Enum_2Enum" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "V0n") ("c_2Einteger_2Eint__of__num" "V1m")) ("c_2Eprim__rec_2E_3C" "V0n" "V1m")) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" "V0n")) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" "V1m"))) ("c_2Eprim__rec_2E_3C" "V1m" "V0n")) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" "V0n")) ("c_2Einteger_2Eint__of__num" "V1m")) ("c_2Ebool_2E_5C_2F" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Enum_2Enum") "V0n" "c_2Enum_2E0")) ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Enum_2Enum") "V1m" "c_2Enum_2E0")))) (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "V0n") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" "V1m"))) "c_2Ebool_2EF")))))))))
; integer.NUM_POSINT: ∀V0i. 0 ≤ V0i ⇒ ∃!V1n. V0i = &V1n
(conjecture "thm_2Einteger_2ENUM__POSINT" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0i" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0i") (("c_2Ebool_2E_3F_21" "ty_2Enum_2Enum") (lambda "V1n" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0i" ("c_2Einteger_2Eint__of__num" "V1n"))))))))
; integer.NUM_POSINT_EXISTS: ∀V0i. 0 ≤ V0i ⇒ ∃V1n. V0i = &V1n
(conjecture "thm_2Einteger_2ENUM__POSINT__EXISTS" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0i" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0i") (("c_2Ebool_2E_3F" "ty_2Enum_2Enum") (lambda "V1n" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0i" ("c_2Einteger_2Eint__of__num" "V1n"))))))))
; integer.NUM_NEGINT_EXISTS: ∀V0i. V0i ≤ 0 ⇒ ∃V1n. V0i = -&V1n
(conjecture "thm_2Einteger_2ENUM__NEGINT__EXISTS" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0i" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Einteger_2Eint__le" "V0i" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) (("c_2Ebool_2E_3F" "ty_2Enum_2Enum") (lambda "V1n" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0i" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" "V1n")))))))))
; integer.INT_NUM_CASES: ∀V0p.     (∃V1n. (V0p = &V1n) ∧ V1n ≠ 0) ∨ (∃V2n. (V0p = -&V2n) ∧ V2n ≠ 0) ∨     (V0p = 0)
(conjecture "thm_2Einteger_2EINT__NUM__CASES" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" ("c_2Ebool_2E_5C_2F" (("c_2Ebool_2E_3F" "ty_2Enum_2Enum") (lambda "V1n" "ty_2Enum_2Enum" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0p" ("c_2Einteger_2Eint__of__num" "V1n")) ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Enum_2Enum") "V1n" "c_2Enum_2E0"))))) ("c_2Ebool_2E_5C_2F" (("c_2Ebool_2E_3F" "ty_2Enum_2Enum") (lambda "V2n" "ty_2Enum_2Enum" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0p" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" "V2n"))) ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Enum_2Enum") "V2n" "c_2Enum_2E0"))))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0p" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")))))))
; integer.INT_DISCRETE: ∀V0x V1y. ¬(V0x < V1y ∧ V1y < V0x + 1)
(conjecture "thm_2Einteger_2EINT__DISCRETE" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" ("c_2Ebool_2E_7E" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__lt" "V0x" "V1y") ("c_2Einteger_2Eint__lt" "V1y" ("c_2Einteger_2Eint__add" "V0x" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO"))))))))))))
; integer.INT_LE_LT1: ∀V0x V1y. V0x ≤ V1y ⇔ V0x < V1y + 1
(conjecture "thm_2Einteger_2EINT__LE__LT1" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" "V0x" "V1y") ("c_2Einteger_2Eint__lt" "V0x" ("c_2Einteger_2Eint__add" "V1y" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO")))))))))))
; integer.INT_LT_LE1: ∀V0x V1y. V0x < V1y ⇔ V0x + 1 ≤ V1y
(conjecture "thm_2Einteger_2EINT__LT__LE1" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" "V0x" "V1y") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__add" "V0x" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO")))) "V1y")))))))
; integer.INT_MUL_EQ_1: ∀V0x V1y. (V0x * V1y = 1) ⇔ (V0x = 1) ∧ (V1y = 1) ∨ (V0x = -1) ∧ (V1y = -1)
(conjecture "thm_2Einteger_2EINT__MUL__EQ__1" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mul" "V0x" "V1y") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO")))) ("c_2Ebool_2E_5C_2F" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0x" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO")))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V1y" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO"))))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0x" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO"))))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V1y" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO")))))))))))))
; integer.Num: ∀V0i. Num V0i = @V1n. V0i = &V1n
(axiom "thm_2Einteger_2ENum" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0i" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Enum_2Enum") ("c_2Einteger_2ENum" "V0i") (("c_2Emin_2E_40" "ty_2Enum_2Enum") (lambda "V1n" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0i" ("c_2Einteger_2Eint__of__num" "V1n"))))))))
; integer.NUM_OF_INT: ∀V0n. Num (&V0n) = V0n
(conjecture "thm_2Einteger_2ENUM__OF__INT" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0n" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" "ty_2Enum_2Enum") ("c_2Einteger_2ENum" ("c_2Einteger_2Eint__of__num" "V0n")) "V0n"))))
; integer.INT_OF_NUM: ∀V0i. (&Num V0i = V0i) ⇔ 0 ≤ V0i
(conjecture "thm_2Einteger_2EINT__OF__NUM" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0i" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__of__num" ("c_2Einteger_2ENum" "V0i")) "V0i") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0i")))))
; integer.LE_NUM_OF_INT: ∀V0n V1i. &V0n ≤ V1i ⇒ V0n ≤ Num V1i
(conjecture "thm_2Einteger_2ELE__NUM__OF__INT" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0n" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1i" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "V0n") "V1i") ("c_2Earithmetic_2E_3C_3D" "V0n" ("c_2Einteger_2ENum" "V1i"))))))))
; integer.NUM_LT: ∀V0x V1y. 0 ≤ V0x ∧ 0 ≤ V1y ⇒ (Num V0x < Num V1y ⇔ V0x < V1y)
(conjecture "thm_2Einteger_2ENUM__LT" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0x") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V1y")) (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Eprim__rec_2E_3C" ("c_2Einteger_2ENum" "V0x") ("c_2Einteger_2ENum" "V1y")) ("c_2Einteger_2Eint__lt" "V0x" "V1y"))))))))
; integer.int_div: ∀V0i V1j.     V1j ≠ 0 ⇒     (V0i / V1j =      if 0 < V1j then        if 0 ≤ V0i then &(Num V0i DIV Num V1j)        else          -&(Num (-V0i) DIV Num V1j) +          if Num (-V0i) MOD Num V1j = 0 then 0 else -1      else if 0 ≤ V0i then        -&(Num V0i DIV Num (-V1j)) +        if Num V0i MOD Num (-V1j) = 0 then 0 else -1      else &(Num (-V0i) DIV Num (-V1j)))
(axiom "thm_2Einteger_2Eint__div" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0i" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1j" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V1j" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__div" "V0i" "V1j") (("c_2Ebool_2ECOND" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V1j") (("c_2Ebool_2ECOND" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0i") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EDIV" ("c_2Einteger_2ENum" "V0i") ("c_2Einteger_2ENum" "V1j"))) ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EDIV" ("c_2Einteger_2ENum" ("c_2Einteger_2Eint__neg" "V0i")) ("c_2Einteger_2ENum" "V1j")))) (("c_2Ebool_2ECOND" "ty_2Einteger_2Eint") (("c_2Emin_2E_3D" "ty_2Enum_2Enum") ("c_2Earithmetic_2EMOD" ("c_2Einteger_2ENum" ("c_2Einteger_2Eint__neg" "V0i")) ("c_2Einteger_2ENum" "V1j")) "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO"))))))) (("c_2Ebool_2ECOND" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0i") ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EDIV" ("c_2Einteger_2ENum" "V0i") ("c_2Einteger_2ENum" ("c_2Einteger_2Eint__neg" "V1j"))))) (("c_2Ebool_2ECOND" "ty_2Einteger_2Eint") (("c_2Emin_2E_3D" "ty_2Enum_2Enum") ("c_2Earithmetic_2EMOD" ("c_2Einteger_2ENum" "V0i") ("c_2Einteger_2ENum" ("c_2Einteger_2Eint__neg" "V1j"))) "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO")))))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EDIV" ("c_2Einteger_2ENum" ("c_2Einteger_2Eint__neg" "V0i")) ("c_2Einteger_2ENum" ("c_2Einteger_2Eint__neg" "V1j")))))))))))))
; integer.INT_DIV: ∀V0n V1m. V1m ≠ 0 ⇒ (&V0n / &V1m = &(V0n DIV V1m))
(conjecture "thm_2Einteger_2EINT__DIV" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0n" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1m" "ty_2Enum_2Enum" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Enum_2Enum") "V1m" "c_2Enum_2E0")) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__div" ("c_2Einteger_2Eint__of__num" "V0n") ("c_2Einteger_2Eint__of__num" "V1m")) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EDIV" "V0n" "V1m")))))))))
; integer.INT_DIV_NEG: ∀V0p V1q. V1q ≠ 0 ⇒ (V0p / -V1q = -V0p / V1q)
(conjecture "thm_2Einteger_2EINT__DIV__NEG" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1q" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V1q" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__div" "V0p" ("c_2Einteger_2Eint__neg" "V1q")) ("c_2Einteger_2Eint__div" ("c_2Einteger_2Eint__neg" "V0p") "V1q"))))))))
; integer.INT_DIV_1: ∀V0p. V0p / 1 = V0p
(conjecture "thm_2Einteger_2EINT__DIV__1" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__div" "V0p" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO")))) "V0p"))))
; integer.INT_DIV_0: ∀V0q. V0q ≠ 0 ⇒ (0 / V0q = 0)
(conjecture "thm_2Einteger_2EINT__DIV__0" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0q" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0q" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__div" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0q") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))))))
; integer.INT_DIV_ID: ∀V0p. V0p ≠ 0 ⇒ (V0p / V0p = 1)
(conjecture "thm_2Einteger_2EINT__DIV__ID" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0p" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__div" "V0p" "V0p") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO"))))))))
; integer.int_mod: ∀V0i V1j. V1j ≠ 0 ⇒ (V0i % V1j = V0i − V0i / V1j * V1j)
(axiom "thm_2Einteger_2Eint__mod" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0i" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1j" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V1j" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" "V0i" "V1j") ("c_2Einteger_2Eint__sub" "V0i" ("c_2Einteger_2Eint__mul" ("c_2Einteger_2Eint__div" "V0i" "V1j") "V1j")))))))))
; integer.INT_MOD_BOUNDS: ∀V0p V1q.     V1q ≠ 0 ⇒     if V1q < 0 then V1q < V0p % V1q ∧ V0p % V1q ≤ 0     else 0 ≤ V0p % V1q ∧ V0p % V1q < V1q
(conjecture "thm_2Einteger_2EINT__MOD__BOUNDS" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1q" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V1q" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Ebool_2ECOND" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" "V1q" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__lt" "V1q" ("c_2Einteger_2Eint__mod" "V0p" "V1q")) ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__mod" "V0p" "V1q") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__mod" "V0p" "V1q")) ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__mod" "V0p" "V1q") "V1q")))))))))
; integer.INT_DIVISION: ∀V0q.     V0q ≠ 0 ⇒     ∀V1p.         (V1p = V1p / V0q * V0q + V1p % V0q) ∧         if V0q < 0 then V0q < V1p % V0q ∧ V1p % V0q ≤ 0         else 0 ≤ V1p % V0q ∧ V1p % V0q < V0q
(conjecture "thm_2Einteger_2EINT__DIVISION" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0q" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0q" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1p" "ty_2Einteger_2Eint" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V1p" ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__mul" ("c_2Einteger_2Eint__div" "V1p" "V0q") "V0q") ("c_2Einteger_2Eint__mod" "V1p" "V0q"))) (("c_2Ebool_2ECOND" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" "V0q" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__lt" "V0q" ("c_2Einteger_2Eint__mod" "V1p" "V0q")) ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__mod" "V1p" "V0q") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__mod" "V1p" "V0q")) ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__mod" "V1p" "V0q") "V0q"))))))))))
; integer.INT_MOD: ∀V0n V1m. V1m ≠ 0 ⇒ (&V0n % &V1m = &(V0n MOD V1m))
(conjecture "thm_2Einteger_2EINT__MOD" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0n" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1m" "ty_2Enum_2Enum" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Enum_2Enum") "V1m" "c_2Enum_2E0")) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" ("c_2Einteger_2Eint__of__num" "V0n") ("c_2Einteger_2Eint__of__num" "V1m")) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EMOD" "V0n" "V1m")))))))))
; integer.INT_MOD_NEG: ∀V0p V1q. V1q ≠ 0 ⇒ (V0p % -V1q = -(-V0p % V1q))
(conjecture "thm_2Einteger_2EINT__MOD__NEG" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1q" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V1q" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" "V0p" ("c_2Einteger_2Eint__neg" "V1q")) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__mod" ("c_2Einteger_2Eint__neg" "V0p") "V1q")))))))))
; integer.INT_MOD0: ∀V0p. V0p ≠ 0 ⇒ (0 % V0p = 0)
(conjecture "thm_2Einteger_2EINT__MOD0" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0p" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0p") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))))))
; integer.INT_DIV_MUL_ID: ∀V0p V1q. V1q ≠ 0 ∧ (V0p % V1q = 0) ⇒ (V0p / V1q * V1q = V0p)
(conjecture "thm_2Einteger_2EINT__DIV__MUL__ID" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1q" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V1q" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" "V0p" "V1q") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mul" ("c_2Einteger_2Eint__div" "V0p" "V1q") "V1q") "V0p")))))))
; integer.INT_DIV_UNIQUE: ∀V0i V1j V2q.     (∃V3r.          (V0i = V2q * V1j + V3r) ∧          if V1j < 0 then V1j < V3r ∧ V3r ≤ 0 else 0 ≤ V3r ∧ V3r < V1j) ⇒     (V0i / V1j = V2q)
(conjecture "thm_2Einteger_2EINT__DIV__UNIQUE" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0i" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1j" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2q" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" (("c_2Ebool_2E_3F" "ty_2Einteger_2Eint") (lambda "V3r" "ty_2Einteger_2Eint" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0i" ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__mul" "V2q" "V1j") "V3r")) (("c_2Ebool_2ECOND" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" "V1j" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__lt" "V1j" "V3r") ("c_2Einteger_2Eint__le" "V3r" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V3r") ("c_2Einteger_2Eint__lt" "V3r" "V1j")))))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__div" "V0i" "V1j") "V2q")))))))))
; integer.INT_MOD_UNIQUE: ∀V0i V1j V2m.     (∃V3q.          (V0i = V3q * V1j + V2m) ∧          if V1j < 0 then V1j < V2m ∧ V2m ≤ 0 else 0 ≤ V2m ∧ V2m < V1j) ⇒     (V0i % V1j = V2m)
(conjecture "thm_2Einteger_2EINT__MOD__UNIQUE" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0i" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1j" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2m" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" (("c_2Ebool_2E_3F" "ty_2Einteger_2Eint") (lambda "V3q" "ty_2Einteger_2Eint" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0i" ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__mul" "V3q" "V1j") "V2m")) (("c_2Ebool_2ECOND" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" "V1j" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__lt" "V1j" "V2m") ("c_2Einteger_2Eint__le" "V2m" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V2m") ("c_2Einteger_2Eint__lt" "V2m" "V1j")))))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" "V0i" "V1j") "V2m")))))))))
; integer.INT_MOD_ID: ∀V0i. V0i ≠ 0 ⇒ (V0i % V0i = 0)
(conjecture "thm_2Einteger_2EINT__MOD__ID" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0i" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0i" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" "V0i" "V0i") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))))))
; integer.INT_MOD_COMMON_FACTOR: ∀V0p. V0p ≠ 0 ⇒ ∀V1q. (V1q * V0p) % V0p = 0
(conjecture "thm_2Einteger_2EINT__MOD__COMMON__FACTOR" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0p" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1q" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" ("c_2Einteger_2Eint__mul" "V1q" "V0p") "V0p") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))))))))
; integer.INT_DIV_LMUL: ∀V0i V1j. V0i ≠ 0 ⇒ (V0i * V1j / V0i = V1j)
(conjecture "thm_2Einteger_2EINT__DIV__LMUL" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0i" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1j" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0i" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__div" ("c_2Einteger_2Eint__mul" "V0i" "V1j") "V0i") "V1j")))))))
; integer.INT_DIV_RMUL: ∀V0i V1j. V0i ≠ 0 ⇒ (V1j * V0i / V0i = V1j)
(conjecture "thm_2Einteger_2EINT__DIV__RMUL" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0i" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1j" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0i" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__div" ("c_2Einteger_2Eint__mul" "V1j" "V0i") "V0i") "V1j")))))))
; integer.INT_MOD_EQ0: ∀V0q. V0q ≠ 0 ⇒ ∀V1p. (V1p % V0q = 0) ⇔ ∃V2k. V1p = V2k * V0q
(conjecture "thm_2Einteger_2EINT__MOD__EQ0" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0q" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0q" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1p" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" "V1p" "V0q") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) (("c_2Ebool_2E_3F" "ty_2Einteger_2Eint") (lambda "V2k" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V1p" ("c_2Einteger_2Eint__mul" "V2k" "V0q")))))))))))
; integer.INT_MUL_DIV: ∀V0p V1q V2k.     V1q ≠ 0 ∧ (V0p % V1q = 0) ⇒ (V2k * V0p / V1q = V2k * (V0p / V1q))
(conjecture "thm_2Einteger_2EINT__MUL__DIV" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1q" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2k" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V1q" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" "V0p" "V1q") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__div" ("c_2Einteger_2Eint__mul" "V2k" "V0p") "V1q") ("c_2Einteger_2Eint__mul" "V2k" ("c_2Einteger_2Eint__div" "V0p" "V1q")))))))))))
; integer.INT_ADD_DIV: ∀V0i V1j V2k.     V2k ≠ 0 ∧ ((V0i % V2k = 0) ∨ (V1j % V2k = 0)) ⇒     ((V0i + V1j) / V2k = V0i / V2k + V1j / V2k)
(conjecture "thm_2Einteger_2EINT__ADD__DIV" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0i" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1j" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2k" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V2k" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) ("c_2Ebool_2E_5C_2F" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" "V0i" "V2k") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" "V1j" "V2k") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__div" ("c_2Einteger_2Eint__add" "V0i" "V1j") "V2k") ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__div" "V0i" "V2k") ("c_2Einteger_2Eint__div" "V1j" "V2k")))))))))))
; integer.INT_MOD_ADD_MULTIPLES: ∀V0k V1q V2r. V0k ≠ 0 ⇒ ((V1q * V0k + V2r) % V0k = V2r % V0k)
(conjecture "thm_2Einteger_2EINT__MOD__ADD__MULTIPLES" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0k" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1q" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2r" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0k" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__mul" "V1q" "V0k") "V2r") "V0k") ("c_2Einteger_2Eint__mod" "V2r" "V0k"))))))))))
; integer.INT_MOD_NEG_NUMERATOR: ∀V0k V1x. V0k ≠ 0 ⇒ (-V1x % V0k = (V0k − V1x) % V0k)
(conjecture "thm_2Einteger_2EINT__MOD__NEG__NUMERATOR" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0k" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1x" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0k" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" ("c_2Einteger_2Eint__neg" "V1x") "V0k") ("c_2Einteger_2Eint__mod" ("c_2Einteger_2Eint__sub" "V0k" "V1x") "V0k"))))))))
; integer.INT_MOD_PLUS: ∀V0k V1i V2j. V0k ≠ 0 ⇒ ((V1i % V0k + V2j % V0k) % V0k = (V1i + V2j) % V0k)
(conjecture "thm_2Einteger_2EINT__MOD__PLUS" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0k" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1i" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2j" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0k" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__mod" "V1i" "V0k") ("c_2Einteger_2Eint__mod" "V2j" "V0k")) "V0k") ("c_2Einteger_2Eint__mod" ("c_2Einteger_2Eint__add" "V1i" "V2j") "V0k"))))))))))
; integer.INT_MOD_SUB: ∀V0k V1i V2j. V0k ≠ 0 ⇒ ((V1i % V0k − V2j % V0k) % V0k = (V1i − V2j) % V0k)
(conjecture "thm_2Einteger_2EINT__MOD__SUB" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0k" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1i" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2j" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0k" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" ("c_2Einteger_2Eint__sub" ("c_2Einteger_2Eint__mod" "V1i" "V0k") ("c_2Einteger_2Eint__mod" "V2j" "V0k")) "V0k") ("c_2Einteger_2Eint__mod" ("c_2Einteger_2Eint__sub" "V1i" "V2j") "V0k"))))))))))
; integer.INT_MOD_MOD: ∀V0k V1j. V0k ≠ 0 ⇒ (V1j % V0k % V0k = V1j % V0k)
(conjecture "thm_2Einteger_2EINT__MOD__MOD" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0k" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1j" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0k" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" ("c_2Einteger_2Eint__mod" "V1j" "V0k") "V0k") ("c_2Einteger_2Eint__mod" "V1j" "V0k"))))))))
; integer.INT_DIV_P: ∀V0P V1x V2c.     V2c ≠ 0 ⇒     (V0P (V1x / V2c) ⇔      ∃V3k V4r.          (V1x = V3k * V2c + V4r) ∧          (V2c < 0 ∧ V2c < V4r ∧ V4r ≤ 0 ∨ ¬(V2c < 0) ∧ 0 ≤ V4r ∧ V4r < V2c) ∧          V0P V3k)
(conjecture "thm_2Einteger_2EINT__DIV__P" (("c_2Ebool_2E_21" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" "ty_2Emin_2Ebool")) (lambda "V0P" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" "ty_2Emin_2Ebool") (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2c" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V2c" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("V0P" ("c_2Einteger_2Eint__div" "V1x" "V2c")) (("c_2Ebool_2E_3F" "ty_2Einteger_2Eint") (lambda "V3k" "ty_2Einteger_2Eint" (("c_2Ebool_2E_3F" "ty_2Einteger_2Eint") (lambda "V4r" "ty_2Einteger_2Eint" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V1x" ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__mul" "V3k" "V2c") "V4r")) ("c_2Ebool_2E_2F_5C" ("c_2Ebool_2E_5C_2F" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__lt" "V2c" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__lt" "V2c" "V4r") ("c_2Einteger_2Eint__le" "V4r" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")))) ("c_2Ebool_2E_2F_5C" ("c_2Ebool_2E_7E" ("c_2Einteger_2Eint__lt" "V2c" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V4r") ("c_2Einteger_2Eint__lt" "V4r" "V2c")))) ("V0P" "V3k"))))))))))))))))
; integer.INT_MOD_P: ∀V0P V1x V2c.     V2c ≠ 0 ⇒     (V0P (V1x % V2c) ⇔      ∃V3k V4r.          (V1x = V3k * V2c + V4r) ∧          (V2c < 0 ∧ V2c < V4r ∧ V4r ≤ 0 ∨ ¬(V2c < 0) ∧ 0 ≤ V4r ∧ V4r < V2c) ∧          V0P V4r)
(conjecture "thm_2Einteger_2EINT__MOD__P" (("c_2Ebool_2E_21" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" "ty_2Emin_2Ebool")) (lambda "V0P" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" "ty_2Emin_2Ebool") (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2c" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V2c" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("V0P" ("c_2Einteger_2Eint__mod" "V1x" "V2c")) (("c_2Ebool_2E_3F" "ty_2Einteger_2Eint") (lambda "V3k" "ty_2Einteger_2Eint" (("c_2Ebool_2E_3F" "ty_2Einteger_2Eint") (lambda "V4r" "ty_2Einteger_2Eint" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V1x" ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__mul" "V3k" "V2c") "V4r")) ("c_2Ebool_2E_2F_5C" ("c_2Ebool_2E_5C_2F" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__lt" "V2c" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__lt" "V2c" "V4r") ("c_2Einteger_2Eint__le" "V4r" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")))) ("c_2Ebool_2E_2F_5C" ("c_2Ebool_2E_7E" ("c_2Einteger_2Eint__lt" "V2c" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V4r") ("c_2Einteger_2Eint__lt" "V4r" "V2c")))) ("V0P" "V4r"))))))))))))))))
; integer.INT_DIV_FORALL_P: ∀V0P V1x V2c.     V2c ≠ 0 ⇒     (V0P (V1x / V2c) ⇔      ∀V3k V4r.          (V1x = V3k * V2c + V4r) ∧          (V2c < 0 ∧ V2c < V4r ∧ V4r ≤ 0 ∨ ¬(V2c < 0) ∧ 0 ≤ V4r ∧ V4r < V2c) ⇒          V0P V3k)
(conjecture "thm_2Einteger_2EINT__DIV__FORALL__P" (("c_2Ebool_2E_21" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" "ty_2Emin_2Ebool")) (lambda "V0P" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" "ty_2Emin_2Ebool") (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2c" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V2c" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("V0P" ("c_2Einteger_2Eint__div" "V1x" "V2c")) (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V3k" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V4r" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V1x" ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__mul" "V3k" "V2c") "V4r")) ("c_2Ebool_2E_5C_2F" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__lt" "V2c" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__lt" "V2c" "V4r") ("c_2Einteger_2Eint__le" "V4r" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")))) ("c_2Ebool_2E_2F_5C" ("c_2Ebool_2E_7E" ("c_2Einteger_2Eint__lt" "V2c" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V4r") ("c_2Einteger_2Eint__lt" "V4r" "V2c"))))) ("V0P" "V3k")))))))))))))))
; integer.INT_MOD_FORALL_P: ∀V0P V1x V2c.     V2c ≠ 0 ⇒     (V0P (V1x % V2c) ⇔      ∀V3q V4r.          (V1x = V3q * V2c + V4r) ∧          (V2c < 0 ∧ V2c < V4r ∧ V4r ≤ 0 ∨ ¬(V2c < 0) ∧ 0 ≤ V4r ∧ V4r < V2c) ⇒          V0P V4r)
(conjecture "thm_2Einteger_2EINT__MOD__FORALL__P" (("c_2Ebool_2E_21" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" "ty_2Emin_2Ebool")) (lambda "V0P" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" "ty_2Emin_2Ebool") (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2c" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V2c" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("V0P" ("c_2Einteger_2Eint__mod" "V1x" "V2c")) (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V3q" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V4r" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V1x" ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__mul" "V3q" "V2c") "V4r")) ("c_2Ebool_2E_5C_2F" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__lt" "V2c" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__lt" "V2c" "V4r") ("c_2Einteger_2Eint__le" "V4r" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")))) ("c_2Ebool_2E_2F_5C" ("c_2Ebool_2E_7E" ("c_2Einteger_2Eint__lt" "V2c" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V4r") ("c_2Einteger_2Eint__lt" "V4r" "V2c"))))) ("V0P" "V4r")))))))))))))))
; integer.INT_MOD_1: ∀V0i. V0i % 1 = 0
(conjecture "thm_2Einteger_2EINT__MOD__1" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0i" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" "V0i" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO")))) ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")))))
; integer.INT_LESS_MOD: ∀V0i V1j. 0 ≤ V0i ∧ V0i < V1j ⇒ (V0i % V1j = V0i)
(conjecture "thm_2Einteger_2EINT__LESS__MOD" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0i" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1j" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0i") ("c_2Einteger_2Eint__lt" "V0i" "V1j")) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" "V0i" "V1j") "V0i")))))))
; integer.INT_MOD_MINUS1: ∀V0n. 0 < V0n ⇒ (-1 % V0n = V0n − 1)
(conjecture "thm_2Einteger_2EINT__MOD__MINUS1" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0n" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0n") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO")))) "V0n") ("c_2Einteger_2Eint__sub" "V0n" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO")))))))))
; integer.INT_ABS: ∀V0n. ABS V0n = if V0n < 0 then -V0n else V0n
(axiom "thm_2Einteger_2EINT__ABS" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0n" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2EABS" "V0n") (("c_2Ebool_2ECOND" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__lt" "V0n" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Einteger_2Eint__neg" "V0n") "V0n")))))
; integer.INT_ABS_POS: ∀V0p. 0 ≤ ABS V0p
(conjecture "thm_2Einteger_2EINT__ABS__POS" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2EABS" "V0p")))))
; integer.INT_ABS_NUM: ∀V0n. ABS (&V0n) = &V0n
(conjecture "thm_2Einteger_2EINT__ABS__NUM" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0n" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2EABS" ("c_2Einteger_2Eint__of__num" "V0n")) ("c_2Einteger_2Eint__of__num" "V0n")))))
; integer.INT_NEG_SAME_EQ: ∀V0p. (V0p = -V0p) ⇔ (V0p = 0)
(conjecture "thm_2Einteger_2EINT__NEG__SAME__EQ" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0p" ("c_2Einteger_2Eint__neg" "V0p")) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0p" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))))))
; integer.INT_ABS_NEG: ∀V0p. ABS (-V0p) = ABS V0p
(conjecture "thm_2Einteger_2EINT__ABS__NEG" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2EABS" ("c_2Einteger_2Eint__neg" "V0p")) ("c_2Einteger_2EABS" "V0p")))))
; integer.INT_ABS_ABS: ∀V0p. ABS (ABS V0p) = ABS V0p
(conjecture "thm_2Einteger_2EINT__ABS__ABS" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2EABS" ("c_2Einteger_2EABS" "V0p")) ("c_2Einteger_2EABS" "V0p")))))
; integer.INT_ABS_EQ_ID: ∀V0p. (ABS V0p = V0p) ⇔ 0 ≤ V0p
(conjecture "thm_2Einteger_2EINT__ABS__EQ__ID" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2EABS" "V0p") "V0p") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0p")))))
; integer.INT_ABS_MUL: ∀V0p V1q. ABS V0p * ABS V1q = ABS (V0p * V1q)
(conjecture "thm_2Einteger_2EINT__ABS__MUL" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1q" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mul" ("c_2Einteger_2EABS" "V0p") ("c_2Einteger_2EABS" "V1q")) ("c_2Einteger_2EABS" ("c_2Einteger_2Eint__mul" "V0p" "V1q"))))))))
; integer.INT_ABS_EQ0: ∀V0p. (ABS V0p = 0) ⇔ (V0p = 0)
(conjecture "thm_2Einteger_2EINT__ABS__EQ0" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2EABS" "V0p") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0p" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))))))
; integer.INT_ABS_LT0: ∀V0p. ¬(ABS V0p < 0)
(conjecture "thm_2Einteger_2EINT__ABS__LT0" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" ("c_2Ebool_2E_7E" ("c_2Einteger_2Eint__lt" ("c_2Einteger_2EABS" "V0p") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))))))
; integer.INT_ABS_0LT: ∀V0p. 0 < ABS V0p ⇔ V0p ≠ 0
(conjecture "thm_2Einteger_2EINT__ABS__0LT" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2EABS" "V0p")) ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0p" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")))))))
; integer.INT_ABS_LE0: ∀V0p. ABS V0p ≤ 0 ⇔ (V0p = 0)
(conjecture "thm_2Einteger_2EINT__ABS__LE0" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" ("c_2Einteger_2EABS" "V0p") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0p" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))))))
; integer.INT_ABS_LT: ∀V0p V1q.     (ABS V0p < V1q ⇔ V0p < V1q ∧ -V1q < V0p) ∧     (V1q < ABS V0p ⇔ V1q < V0p ∨ V0p < -V1q) ∧     (-ABS V0p < V1q ⇔ -V1q < V0p ∨ V0p < V1q) ∧     (V1q < -ABS V0p ⇔ V0p < -V1q ∧ V1q < V0p)
(conjecture "thm_2Einteger_2EINT__ABS__LT" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1q" "ty_2Einteger_2Eint" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2EABS" "V0p") "V1q") ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__lt" "V0p" "V1q") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__neg" "V1q") "V0p"))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" "V1q" ("c_2Einteger_2EABS" "V0p")) ("c_2Ebool_2E_5C_2F" ("c_2Einteger_2Eint__lt" "V1q" "V0p") ("c_2Einteger_2Eint__lt" "V0p" ("c_2Einteger_2Eint__neg" "V1q")))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2EABS" "V0p")) "V1q") ("c_2Ebool_2E_5C_2F" ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__neg" "V1q") "V0p") ("c_2Einteger_2Eint__lt" "V0p" "V1q"))) (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" "V1q" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2EABS" "V0p"))) ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__lt" "V0p" ("c_2Einteger_2Eint__neg" "V1q")) ("c_2Einteger_2Eint__lt" "V1q" "V0p")))))))))))
; integer.INT_ABS_LE: ∀V0p V1q.     (ABS V0p ≤ V1q ⇔ V0p ≤ V1q ∧ -V1q ≤ V0p) ∧     (V1q ≤ ABS V0p ⇔ V1q ≤ V0p ∨ V0p ≤ -V1q) ∧     (-ABS V0p ≤ V1q ⇔ -V1q ≤ V0p ∨ V0p ≤ V1q) ∧     (V1q ≤ -ABS V0p ⇔ V0p ≤ -V1q ∧ V1q ≤ V0p)
(conjecture "thm_2Einteger_2EINT__ABS__LE" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1q" "ty_2Einteger_2Eint" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" ("c_2Einteger_2EABS" "V0p") "V1q") ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__le" "V0p" "V1q") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__neg" "V1q") "V0p"))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" "V1q" ("c_2Einteger_2EABS" "V0p")) ("c_2Ebool_2E_5C_2F" ("c_2Einteger_2Eint__le" "V1q" "V0p") ("c_2Einteger_2Eint__le" "V0p" ("c_2Einteger_2Eint__neg" "V1q")))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2EABS" "V0p")) "V1q") ("c_2Ebool_2E_5C_2F" ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__neg" "V1q") "V0p") ("c_2Einteger_2Eint__le" "V0p" "V1q"))) (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" "V1q" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2EABS" "V0p"))) ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__le" "V0p" ("c_2Einteger_2Eint__neg" "V1q")) ("c_2Einteger_2Eint__le" "V1q" "V0p")))))))))))
; integer.INT_ABS_EQ: ∀V0p V1q.     ((ABS V0p = V1q) ⇔ (V0p = V1q) ∧ 0 < V1q ∨ (V0p = -V1q) ∧ 0 ≤ V1q) ∧     ((V1q = ABS V0p) ⇔ (V0p = V1q) ∧ 0 < V1q ∨ (V0p = -V1q) ∧ 0 ≤ V1q)
(conjecture "thm_2Einteger_2EINT__ABS__EQ" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1q" "ty_2Einteger_2Eint" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2EABS" "V0p") "V1q") ("c_2Ebool_2E_5C_2F" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0p" "V1q") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V1q")) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0p" ("c_2Einteger_2Eint__neg" "V1q")) ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V1q")))) (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V1q" ("c_2Einteger_2EABS" "V0p")) ("c_2Ebool_2E_5C_2F" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0p" "V1q") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V1q")) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0p" ("c_2Einteger_2Eint__neg" "V1q")) ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V1q"))))))))))
; integer.INT_ABS_EQ_ABS: ∀V0x V1y. (ABS V0x = ABS V1y) ⇔ (V0x = V1y) ∨ (V0x = -V1y)
(conjecture "thm_2Einteger_2EINT__ABS__EQ__ABS" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2EABS" "V0x") ("c_2Einteger_2EABS" "V1y")) ("c_2Ebool_2E_5C_2F" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0x" "V1y") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0x" ("c_2Einteger_2Eint__neg" "V1y")))))))))
; integer.int_quot: ∀V0i V1j.     V1j ≠ 0 ⇒     (V0i quot V1j =      if 0 < V1j then        if 0 ≤ V0i then &(Num V0i DIV Num V1j) else -&(Num (-V0i) DIV Num V1j)      else if 0 ≤ V0i then -&(Num V0i DIV Num (-V1j))      else &(Num (-V0i) DIV Num (-V1j)))
(axiom "thm_2Einteger_2Eint__quot" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0i" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1j" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V1j" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__quot" "V0i" "V1j") (("c_2Ebool_2ECOND" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V1j") (("c_2Ebool_2ECOND" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0i") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EDIV" ("c_2Einteger_2ENum" "V0i") ("c_2Einteger_2ENum" "V1j"))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EDIV" ("c_2Einteger_2ENum" ("c_2Einteger_2Eint__neg" "V0i")) ("c_2Einteger_2ENum" "V1j"))))) (("c_2Ebool_2ECOND" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0i") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EDIV" ("c_2Einteger_2ENum" "V0i") ("c_2Einteger_2ENum" ("c_2Einteger_2Eint__neg" "V1j"))))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EDIV" ("c_2Einteger_2ENum" ("c_2Einteger_2Eint__neg" "V0i")) ("c_2Einteger_2ENum" ("c_2Einteger_2Eint__neg" "V1j")))))))))))))
; integer.INT_QUOT: ∀V0p V1q. V1q ≠ 0 ⇒ (&V0p quot &V1q = &(V0p DIV V1q))
(conjecture "thm_2Einteger_2EINT__QUOT" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0p" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1q" "ty_2Enum_2Enum" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Enum_2Enum") "V1q" "c_2Enum_2E0")) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__quot" ("c_2Einteger_2Eint__of__num" "V0p") ("c_2Einteger_2Eint__of__num" "V1q")) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EDIV" "V0p" "V1q")))))))))
; integer.INT_QUOT_0: ∀V0q. V0q ≠ 0 ⇒ (0 quot V0q = 0)
(conjecture "thm_2Einteger_2EINT__QUOT__0" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0q" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0q" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__quot" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0q") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))))))
; integer.INT_QUOT_1: ∀V0p. V0p quot 1 = V0p
(conjecture "thm_2Einteger_2EINT__QUOT__1" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__quot" "V0p" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO")))) "V0p"))))
; integer.INT_QUOT_NEG: ∀V0p V1q.     V1q ≠ 0 ⇒     (-V0p quot V1q = -(V0p quot V1q)) ∧ (V0p quot -V1q = -(V0p quot V1q))
(conjecture "thm_2Einteger_2EINT__QUOT__NEG" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1q" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V1q" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__quot" ("c_2Einteger_2Eint__neg" "V0p") "V1q") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__quot" "V0p" "V1q"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__quot" "V0p" ("c_2Einteger_2Eint__neg" "V1q")) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__quot" "V0p" "V1q"))))))))))
; integer.INT_ABS_QUOT: ∀V0p V1q. V1q ≠ 0 ⇒ ABS (V0p quot V1q * V1q) ≤ ABS V0p
(conjecture "thm_2Einteger_2EINT__ABS__QUOT" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1q" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V1q" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) ("c_2Einteger_2Eint__le" ("c_2Einteger_2EABS" ("c_2Einteger_2Eint__mul" ("c_2Einteger_2Eint__quot" "V0p" "V1q") "V1q")) ("c_2Einteger_2EABS" "V0p"))))))))
; integer.INT_QUOT_UNIQUE: ∀V0p V1q V2k.     (∃V3r.          (V0p = V2k * V1q + V3r) ∧ (if 0 < V0p then 0 ≤ V3r else V3r ≤ 0) ∧          ABS V3r < ABS V1q) ⇒     (V0p quot V1q = V2k)
(conjecture "thm_2Einteger_2EINT__QUOT__UNIQUE" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1q" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2k" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" (("c_2Ebool_2E_3F" "ty_2Einteger_2Eint") (lambda "V3r" "ty_2Einteger_2Eint" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0p" ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__mul" "V2k" "V1q") "V3r")) ("c_2Ebool_2E_2F_5C" (("c_2Ebool_2ECOND" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0p") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V3r") ("c_2Einteger_2Eint__le" "V3r" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) ("c_2Einteger_2Eint__lt" ("c_2Einteger_2EABS" "V3r") ("c_2Einteger_2EABS" "V1q")))))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__quot" "V0p" "V1q") "V2k")))))))))
; integer.INT_QUOT_ID: ∀V0p. V0p ≠ 0 ⇒ (V0p quot V0p = 1)
(conjecture "thm_2Einteger_2EINT__QUOT__ID" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0p" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__quot" "V0p" "V0p") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO"))))))))
; integer.int_rem: ∀V0i V1j. V1j ≠ 0 ⇒ (V0i rem V1j = V0i − V0i quot V1j * V1j)
(axiom "thm_2Einteger_2Eint__rem" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0i" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1j" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V1j" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__rem" "V0i" "V1j") ("c_2Einteger_2Eint__sub" "V0i" ("c_2Einteger_2Eint__mul" ("c_2Einteger_2Eint__quot" "V0i" "V1j") "V1j")))))))))
; integer.INT_REM: ∀V0p V1q. V1q ≠ 0 ⇒ (&V0p rem &V1q = &(V0p MOD V1q))
(conjecture "thm_2Einteger_2EINT__REM" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0p" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1q" "ty_2Enum_2Enum" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Enum_2Enum") "V1q" "c_2Enum_2E0")) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__rem" ("c_2Einteger_2Eint__of__num" "V0p") ("c_2Einteger_2Eint__of__num" "V1q")) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EMOD" "V0p" "V1q")))))))))
; integer.INT_REMQUOT: ∀V0q.     V0q ≠ 0 ⇒     ∀V1p.         (V1p = V1p quot V0q * V0q + (V1p rem V0q)) ∧         (if 0 < V1p then 0 ≤ V1p rem V0q else V1p rem V0q ≤ 0) ∧         ABS (V1p rem V0q) < ABS V0q
(conjecture "thm_2Einteger_2EINT__REMQUOT" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0q" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0q" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1p" "ty_2Einteger_2Eint" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V1p" ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__mul" ("c_2Einteger_2Eint__quot" "V1p" "V0q") "V0q") ("c_2Einteger_2Eint__rem" "V1p" "V0q"))) ("c_2Ebool_2E_2F_5C" (("c_2Ebool_2ECOND" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V1p") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__rem" "V1p" "V0q")) ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__rem" "V1p" "V0q") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) ("c_2Einteger_2Eint__lt" ("c_2Einteger_2EABS" ("c_2Einteger_2Eint__rem" "V1p" "V0q")) ("c_2Einteger_2EABS" "V0q"))))))))))
; integer.INT_REM_UNIQUE: ∀V0p V1q V2r.     ABS V2r < ABS V1q ∧ (if 0 < V0p then 0 ≤ V2r else V2r ≤ 0) ∧     (∃V3k. V0p = V3k * V1q + V2r) ⇒     (V0p rem V1q = V2r)
(conjecture "thm_2Einteger_2EINT__REM__UNIQUE" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1q" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2r" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__lt" ("c_2Einteger_2EABS" "V2r") ("c_2Einteger_2EABS" "V1q")) ("c_2Ebool_2E_2F_5C" (("c_2Ebool_2ECOND" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0p") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V2r") ("c_2Einteger_2Eint__le" "V2r" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Ebool_2E_3F" "ty_2Einteger_2Eint") (lambda "V3k" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0p" ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__mul" "V3k" "V1q") "V2r")))))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__rem" "V0p" "V1q") "V2r")))))))))
; integer.INT_REM_NEG: ∀V0p V1q.     V1q ≠ 0 ⇒ (-V0p rem V1q = -(V0p rem V1q)) ∧ (V0p rem -V1q = V0p rem V1q)
(conjecture "thm_2Einteger_2EINT__REM__NEG" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1q" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V1q" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__rem" ("c_2Einteger_2Eint__neg" "V0p") "V1q") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__rem" "V0p" "V1q"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__rem" "V0p" ("c_2Einteger_2Eint__neg" "V1q")) ("c_2Einteger_2Eint__rem" "V0p" "V1q")))))))))
; integer.INT_REM_ID: ∀V0p. V0p ≠ 0 ⇒ (V0p rem V0p = 0)
(conjecture "thm_2Einteger_2EINT__REM__ID" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0p" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__rem" "V0p" "V0p") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))))))
; integer.INT_REM0: ∀V0q. V0q ≠ 0 ⇒ (0 rem V0q = 0)
(conjecture "thm_2Einteger_2EINT__REM0" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0q" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0q" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__rem" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0q") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))))))
; integer.INT_REM_COMMON_FACTOR: ∀V0p. V0p ≠ 0 ⇒ ∀V1q. V1q * V0p rem V0p = 0
(conjecture "thm_2Einteger_2EINT__REM__COMMON__FACTOR" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0p" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1q" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__rem" ("c_2Einteger_2Eint__mul" "V1q" "V0p") "V0p") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))))))))
; integer.INT_REM_EQ0: ∀V0q. V0q ≠ 0 ⇒ ∀V1p. (V1p rem V0q = 0) ⇔ ∃V2k. V1p = V2k * V0q
(conjecture "thm_2Einteger_2EINT__REM__EQ0" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0q" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0q" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1p" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__rem" "V1p" "V0q") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) (("c_2Ebool_2E_3F" "ty_2Einteger_2Eint") (lambda "V2k" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V1p" ("c_2Einteger_2Eint__mul" "V2k" "V0q")))))))))))
; integer.INT_MUL_QUOT: ∀V0p V1q V2k.     V1q ≠ 0 ∧ (V0p rem V1q = 0) ⇒ (V2k * V0p quot V1q = V2k * (V0p quot V1q))
(conjecture "thm_2Einteger_2EINT__MUL__QUOT" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1q" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2k" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V1q" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__rem" "V0p" "V1q") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__quot" ("c_2Einteger_2Eint__mul" "V2k" "V0p") "V1q") ("c_2Einteger_2Eint__mul" "V2k" ("c_2Einteger_2Eint__quot" "V0p" "V1q")))))))))))
; integer.INT_REM_EQ_MOD: ∀V0i V1n.     0 < V1n ⇒     (V0i rem V1n = if V0i < 0 then (V0i − 1) % V1n − V1n + 1 else V0i % V1n)
(conjecture "thm_2Einteger_2EINT__REM__EQ__MOD" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0i" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1n" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V1n") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__rem" "V0i" "V1n") (("c_2Ebool_2ECOND" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__lt" "V0i" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__sub" ("c_2Einteger_2Eint__mod" ("c_2Einteger_2Eint__sub" "V0i" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO")))) "V1n") "V1n") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO")))) ("c_2Einteger_2Eint__mod" "V0i" "V1n")))))))))
; integer.INT_DIVIDES: ∀V0p V1q. V0p int_divides V1q ⇔ ∃V2m. V2m * V0p = V1q
(axiom "thm_2Einteger_2EINT__DIVIDES" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1q" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__divides" "V0p" "V1q") (("c_2Ebool_2E_3F" "ty_2Einteger_2Eint") (lambda "V2m" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mul" "V2m" "V0p") "V1q")))))))))
; integer.INT_DIVIDES_MOD0: ∀V0p V1q.     V0p int_divides V1q ⇔ (V1q % V0p = 0) ∧ V0p ≠ 0 ∨ (V0p = 0) ∧ (V1q = 0)
(conjecture "thm_2Einteger_2EINT__DIVIDES__MOD0" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1q" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__divides" "V0p" "V1q") ("c_2Ebool_2E_5C_2F" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" "V1q" "V0p") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0p" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0p" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V1q" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))))))))))
; integer.INT_DIVIDES_0: (∀V0x. V0x int_divides 0) ∧ ∀V1x. 0 int_divides V1x ⇔ (V1x = 0)
(conjecture "thm_2Einteger_2EINT__DIVIDES__0" ("c_2Ebool_2E_2F_5C" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" ("c_2Einteger_2Eint__divides" "V0x" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")))) (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__divides" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V1x") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V1x" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")))))))
; integer.INT_DIVIDES_1: ∀V0x. 1 int_divides V0x ∧ (V0x int_divides 1 ⇔ (V0x = 1) ∨ (V0x = -1))
(conjecture "thm_2Einteger_2EINT__DIVIDES__1" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__divides" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO"))) "V0x") (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__divides" "V0x" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO")))) ("c_2Ebool_2E_5C_2F" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0x" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO")))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0x" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO")))))))))))
; integer.INT_DIVIDES_REFL: ∀V0x. V0x int_divides V0x
(conjecture "thm_2Einteger_2EINT__DIVIDES__REFL" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" ("c_2Einteger_2Eint__divides" "V0x" "V0x"))))
; integer.INT_DIVIDES_TRANS: ∀V0x V1y V2z. V0x int_divides V1y ∧ V1y int_divides V2z ⇒ V0x int_divides V2z
(conjecture "thm_2Einteger_2EINT__DIVIDES__TRANS" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2z" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__divides" "V0x" "V1y") ("c_2Einteger_2Eint__divides" "V1y" "V2z")) ("c_2Einteger_2Eint__divides" "V0x" "V2z")))))))))
; integer.INT_DIVIDES_MUL: ∀V0p V1q. V0p int_divides V0p * V1q ∧ V0p int_divides V1q * V0p
(conjecture "thm_2Einteger_2EINT__DIVIDES__MUL" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1q" "ty_2Einteger_2Eint" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__divides" "V0p" ("c_2Einteger_2Eint__mul" "V0p" "V1q")) ("c_2Einteger_2Eint__divides" "V0p" ("c_2Einteger_2Eint__mul" "V1q" "V0p"))))))))
; integer.INT_DIVIDES_LMUL: ∀V0p V1q V2r. V0p int_divides V1q ⇒ V0p int_divides V1q * V2r
(conjecture "thm_2Einteger_2EINT__DIVIDES__LMUL" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1q" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2r" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Einteger_2Eint__divides" "V0p" "V1q") ("c_2Einteger_2Eint__divides" "V0p" ("c_2Einteger_2Eint__mul" "V1q" "V2r"))))))))))
; integer.INT_DIVIDES_RMUL: ∀V0p V1q V2r. V0p int_divides V1q ⇒ V0p int_divides V2r * V1q
(conjecture "thm_2Einteger_2EINT__DIVIDES__RMUL" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1q" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2r" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Einteger_2Eint__divides" "V0p" "V1q") ("c_2Einteger_2Eint__divides" "V0p" ("c_2Einteger_2Eint__mul" "V2r" "V1q"))))))))))
; integer.INT_DIVIDES_MUL_BOTH: ∀V0p V1q V2r.     V0p ≠ 0 ⇒ (V0p * V1q int_divides V0p * V2r ⇔ V1q int_divides V2r)
(conjecture "thm_2Einteger_2EINT__DIVIDES__MUL__BOTH" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1q" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2r" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0p" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__divides" ("c_2Einteger_2Eint__mul" "V0p" "V1q") ("c_2Einteger_2Eint__mul" "V0p" "V2r")) ("c_2Einteger_2Eint__divides" "V1q" "V2r"))))))))))
; integer.INT_DIVIDES_LADD: ∀V0p V1q V2r.     V0p int_divides V1q ⇒ (V0p int_divides V1q + V2r ⇔ V0p int_divides V2r)
(conjecture "thm_2Einteger_2EINT__DIVIDES__LADD" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1q" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2r" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Einteger_2Eint__divides" "V0p" "V1q") (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__divides" "V0p" ("c_2Einteger_2Eint__add" "V1q" "V2r")) ("c_2Einteger_2Eint__divides" "V0p" "V2r"))))))))))
; integer.INT_DIVIDES_RADD: ∀V0p V1q V2r.     V0p int_divides V1q ⇒ (V0p int_divides V2r + V1q ⇔ V0p int_divides V2r)
(conjecture "thm_2Einteger_2EINT__DIVIDES__RADD" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1q" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2r" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Einteger_2Eint__divides" "V0p" "V1q") (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__divides" "V0p" ("c_2Einteger_2Eint__add" "V2r" "V1q")) ("c_2Einteger_2Eint__divides" "V0p" "V2r"))))))))))
; integer.INT_DIVIDES_NEG: ∀V0p V1q.     (V0p int_divides -V1q ⇔ V0p int_divides V1q) ∧     (-V0p int_divides V1q ⇔ V0p int_divides V1q)
(conjecture "thm_2Einteger_2EINT__DIVIDES__NEG" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1q" "ty_2Einteger_2Eint" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__divides" "V0p" ("c_2Einteger_2Eint__neg" "V1q")) ("c_2Einteger_2Eint__divides" "V0p" "V1q")) (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__divides" ("c_2Einteger_2Eint__neg" "V0p") "V1q") ("c_2Einteger_2Eint__divides" "V0p" "V1q"))))))))
; integer.INT_DIVIDES_LSUB: ∀V0p V1q V2r.     V0p int_divides V1q ⇒ (V0p int_divides V1q − V2r ⇔ V0p int_divides V2r)
(conjecture "thm_2Einteger_2EINT__DIVIDES__LSUB" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1q" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2r" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Einteger_2Eint__divides" "V0p" "V1q") (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__divides" "V0p" ("c_2Einteger_2Eint__sub" "V1q" "V2r")) ("c_2Einteger_2Eint__divides" "V0p" "V2r"))))))))))
; integer.INT_DIVIDES_RSUB: ∀V0p V1q V2r.     V0p int_divides V1q ⇒ (V0p int_divides V2r − V1q ⇔ V0p int_divides V2r)
(conjecture "thm_2Einteger_2EINT__DIVIDES__RSUB" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1q" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2r" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Einteger_2Eint__divides" "V0p" "V1q") (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__divides" "V0p" ("c_2Einteger_2Eint__sub" "V2r" "V1q")) ("c_2Einteger_2Eint__divides" "V0p" "V2r"))))))))))
; integer.int_exp: (∀V0p. V0p ** 0 = 1) ∧ ∀V1p V2n. V1p ** SUC V2n = V1p * V1p ** V2n
(axiom "thm_2Einteger_2Eint__exp" ("c_2Ebool_2E_2F_5C" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__exp" "V0p" "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO")))))) (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V2n" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__exp" "V1p" ("c_2Enum_2ESUC" "V2n")) ("c_2Einteger_2Eint__mul" "V1p" ("c_2Einteger_2Eint__exp" "V1p" "V2n")))))))))
; integer.INT_EXP: ∀V0n V1m. &V0n ** V1m = &(V0n ** V1m)
(conjecture "thm_2Einteger_2EINT__EXP" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0n" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1m" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__exp" ("c_2Einteger_2Eint__of__num" "V0n") "V1m") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EEXP" "V0n" "V1m"))))))))
; integer.INT_EXP_EQ0: ∀V0p V1n. (V0p ** V1n = 0) ⇔ (V0p = 0) ∧ V1n ≠ 0
(conjecture "thm_2Einteger_2EINT__EXP__EQ0" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1n" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__exp" "V0p" "V1n") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0p" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Enum_2Enum") "V1n" "c_2Enum_2E0")))))))))
; integer.INT_MUL_SIGN_CASES: ∀V0p V1q.     (0 < V0p * V1q ⇔ 0 < V0p ∧ 0 < V1q ∨ V0p < 0 ∧ V1q < 0) ∧     (V0p * V1q < 0 ⇔ 0 < V0p ∧ V1q < 0 ∨ V0p < 0 ∧ 0 < V1q)
(conjecture "thm_2Einteger_2EINT__MUL__SIGN__CASES" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1q" "ty_2Einteger_2Eint" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__mul" "V0p" "V1q")) ("c_2Ebool_2E_5C_2F" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0p") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V1q")) ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__lt" "V0p" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Einteger_2Eint__lt" "V1q" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))))) (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__mul" "V0p" "V1q") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Ebool_2E_5C_2F" ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0p") ("c_2Einteger_2Eint__lt" "V1q" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__lt" "V0p" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V1q"))))))))))
; integer.INT_EXP_NEG: ∀V0n V1m.     (EVEN V0n ⇒ (-&V1m ** V0n = &(V1m ** V0n))) ∧     (ODD V0n ⇒ (-&V1m ** V0n = -&(V1m ** V0n)))
(conjecture "thm_2Einteger_2EINT__EXP__NEG" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0n" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1m" "ty_2Enum_2Enum" ("c_2Ebool_2E_2F_5C" ("c_2Emin_2E_3D_3D_3E" ("c_2Earithmetic_2EEVEN" "V0n") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__exp" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" "V1m")) "V0n") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EEXP" "V1m" "V0n")))) ("c_2Emin_2E_3D_3D_3E" ("c_2Earithmetic_2EODD" "V0n") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__exp" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" "V1m")) "V0n") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EEXP" "V1m" "V0n")))))))))))
; integer.INT_EXP_ADD_EXPONENTS: ∀V0n V1m V2p. V2p ** V0n * V2p ** V1m = V2p ** (V0n + V1m)
(conjecture "thm_2Einteger_2EINT__EXP__ADD__EXPONENTS" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0n" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1m" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2p" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mul" ("c_2Einteger_2Eint__exp" "V2p" "V0n") ("c_2Einteger_2Eint__exp" "V2p" "V1m")) ("c_2Einteger_2Eint__exp" "V2p" ("c_2Earithmetic_2E_2B" "V0n" "V1m"))))))))))
; integer.INT_EXP_MULTIPLY_EXPONENTS: ∀V0m V1n V2p. (V2p ** V1n) ** V0m = V2p ** (V1n * V0m)
(conjecture "thm_2Einteger_2EINT__EXP__MULTIPLY__EXPONENTS" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0m" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1n" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2p" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__exp" ("c_2Einteger_2Eint__exp" "V2p" "V1n") "V0m") ("c_2Einteger_2Eint__exp" "V2p" ("c_2Earithmetic_2E_2A" "V1n" "V0m"))))))))))
; integer.INT_EXP_MOD: ∀V0m V1n V2p. V1n ≤ V0m ∧ V2p ≠ 0 ⇒ (V2p ** V0m % V2p ** V1n = 0)
(conjecture "thm_2Einteger_2EINT__EXP__MOD" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0m" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1n" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2p" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" ("c_2Earithmetic_2E_3C_3D" "V1n" "V0m") ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V2p" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" ("c_2Einteger_2Eint__exp" "V2p" "V0m") ("c_2Einteger_2Eint__exp" "V2p" "V1n")) ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))))))))))
; integer.INT_EXP_SUBTRACT_EXPONENTS: ∀V0m V1n V2p.     V1n ≤ V0m ∧ V2p ≠ 0 ⇒ (V2p ** V0m / V2p ** V1n = V2p ** (V0m − V1n))
(conjecture "thm_2Einteger_2EINT__EXP__SUBTRACT__EXPONENTS" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0m" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1n" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2p" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_2F_5C" ("c_2Earithmetic_2E_3C_3D" "V1n" "V0m") ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V2p" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__div" ("c_2Einteger_2Eint__exp" "V2p" "V0m") ("c_2Einteger_2Eint__exp" "V2p" "V1n")) ("c_2Einteger_2Eint__exp" "V2p" ("c_2Earithmetic_2E_2D" "V0m" "V1n")))))))))))
; integer.INT_MIN: ∀V0x V1y. int_min V0x V1y = if V0x < V1y then V0x else V1y
(axiom "thm_2Einteger_2EINT__MIN" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__min" "V0x" "V1y") (("c_2Ebool_2ECOND" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__lt" "V0x" "V1y") "V0x" "V1y")))))))
; integer.INT_MAX: ∀V0x V1y. int_max V0x V1y = if V0x < V1y then V1y else V0x
(axiom "thm_2Einteger_2EINT__MAX" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__max" "V0x" "V1y") (("c_2Ebool_2ECOND" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__lt" "V0x" "V1y") "V1y" "V0x")))))))
; integer.INT_MIN_LT: ∀V0x V1y V2z. V0x < int_min V1y V2z ⇒ V0x < V1y ∧ V0x < V2z
(conjecture "thm_2Einteger_2EINT__MIN__LT" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2z" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Einteger_2Eint__lt" "V0x" ("c_2Einteger_2Eint__min" "V1y" "V2z")) ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__lt" "V0x" "V1y") ("c_2Einteger_2Eint__lt" "V0x" "V2z"))))))))))
; integer.INT_MAX_LT: ∀V0x V1y V2z. int_max V0x V1y < V2z ⇒ V0x < V2z ∧ V1y < V2z
(conjecture "thm_2Einteger_2EINT__MAX__LT" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2z" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__max" "V0x" "V1y") "V2z") ("c_2Ebool_2E_2F_5C" ("c_2Einteger_2Eint__lt" "V0x" "V2z") ("c_2Einteger_2Eint__lt" "V1y" "V2z"))))))))))
; integer.INT_MIN_NUM: ∀V0m V1n. int_min (&V0m) (&V1n) = &MIN V0m V1n
(conjecture "thm_2Einteger_2EINT__MIN__NUM" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0m" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1n" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__min" ("c_2Einteger_2Eint__of__num" "V0m") ("c_2Einteger_2Eint__of__num" "V1n")) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EMIN" "V0m" "V1n"))))))))
; integer.INT_MAX_NUM: ∀V0m V1n. int_max (&V0m) (&V1n) = &MAX V0m V1n
(conjecture "thm_2Einteger_2EINT__MAX__NUM" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0m" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1n" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__max" ("c_2Einteger_2Eint__of__num" "V0m") ("c_2Einteger_2Eint__of__num" "V1n")) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EMAX" "V0m" "V1n"))))))))
; integer.INT_LT_MONO: ∀V0x V1y V2z. 0 < V0x ⇒ (V0x * V1y < V0x * V2z ⇔ V1y < V2z)
(conjecture "thm_2Einteger_2EINT__LT__MONO" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2z" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0x") (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__mul" "V0x" "V1y") ("c_2Einteger_2Eint__mul" "V0x" "V2z")) ("c_2Einteger_2Eint__lt" "V1y" "V2z"))))))))))
; integer.INT_LE_MONO: ∀V0x V1y V2z. 0 < V0x ⇒ (V0x * V1y ≤ V0x * V2z ⇔ V1y ≤ V2z)
(conjecture "thm_2Einteger_2EINT__LE__MONO" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2z" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0x") (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__mul" "V0x" "V1y") ("c_2Einteger_2Eint__mul" "V0x" "V2z")) ("c_2Einteger_2Eint__le" "V1y" "V2z"))))))))))
; integer.INFINITE_INT_UNIV: INFINITE 𝕌(:int)
(conjecture "thm_2Einteger_2EINFINITE__INT__UNIV" ("c_2Ebool_2E_7E" (("c_2Epred__set_2EFINITE" "ty_2Einteger_2Eint") ("c_2Epred__set_2EUNIV" "ty_2Einteger_2Eint"))))
; integer.INT_ADD_CALCULATE: ∀V0p V1n V2m.     (0 + V0p = V0p) ∧ (V0p + 0 = V0p) ∧ (&V1n + &V2m = &(V1n + V2m)) ∧     (&V1n + -&V2m = if V2m ≤ V1n then &(V1n − V2m) else -&(V2m − V1n)) ∧     (-&V1n + &V2m = if V1n ≤ V2m then &(V2m − V1n) else -&(V1n − V2m)) ∧     (-&V1n + -&V2m = -&(V1n + V2m))
(conjecture "thm_2Einteger_2EINT__ADD__CALCULATE" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1n" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V2m" "ty_2Enum_2Enum" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0p") "V0p") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__add" "V0p" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) "V0p") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__of__num" "V1n") ("c_2Einteger_2Eint__of__num" "V2m")) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2E_2B" "V1n" "V2m"))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__of__num" "V1n") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" "V2m"))) (("c_2Ebool_2ECOND" "ty_2Einteger_2Eint") ("c_2Earithmetic_2E_3C_3D" "V2m" "V1n") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2E_2D" "V1n" "V2m")) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2E_2D" "V2m" "V1n"))))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" "V1n")) ("c_2Einteger_2Eint__of__num" "V2m")) (("c_2Ebool_2ECOND" "ty_2Einteger_2Eint") ("c_2Earithmetic_2E_3C_3D" "V1n" "V2m") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2E_2D" "V2m" "V1n")) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2E_2D" "V1n" "V2m"))))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" "V1n")) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" "V2m"))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2E_2B" "V1n" "V2m"))))))))))))))))
; integer.INT_ADD_REDUCE: ∀V0p V1n V2m.     (0 + V0p = V0p) ∧ (V0p + 0 = V0p) ∧ (-0 = 0) ∧ (- -V0p = V0p) ∧     (&NUMERAL V1n + &NUMERAL V2m = &NUMERAL (numeral$iZ (V1n + V2m))) ∧     (&NUMERAL V1n + -&NUMERAL V2m =      if V2m ≤ V1n then &NUMERAL (V1n − V2m) else -&NUMERAL (V2m − V1n)) ∧     (-&NUMERAL V1n + &NUMERAL V2m =      if V1n ≤ V2m then &NUMERAL (V2m − V1n) else -&NUMERAL (V1n − V2m)) ∧     (-&NUMERAL V1n + -&NUMERAL V2m = -&NUMERAL (numeral$iZ (V1n + V2m)))
(conjecture "thm_2Einteger_2EINT__ADD__REDUCE" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1n" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V2m" "ty_2Enum_2Enum" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V0p") "V0p") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__add" "V0p" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) "V0p") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__neg" "V0p")) "V0p") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1n")) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V2m"))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Enumeral_2EiZ" ("c_2Earithmetic_2E_2B" "V1n" "V2m"))))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1n")) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V2m")))) (("c_2Ebool_2ECOND" "ty_2Einteger_2Eint") ("c_2Earithmetic_2E_3C_3D" "V2m" "V1n") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2E_2D" "V1n" "V2m"))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2E_2D" "V2m" "V1n")))))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1n"))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V2m"))) (("c_2Ebool_2ECOND" "ty_2Einteger_2Eint") ("c_2Earithmetic_2E_3C_3D" "V1n" "V2m") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2E_2D" "V2m" "V1n"))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2E_2D" "V1n" "V2m")))))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1n"))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V2m")))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Enumeral_2EiZ" ("c_2Earithmetic_2E_2B" "V1n" "V2m"))))))))))))))))))))
; integer.INT_SUB_CALCULATE: ∀V0x V1y. V0x − V1y = V0x + -V1y
(conjecture "thm_2Einteger_2EINT__SUB__CALCULATE" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__sub" "V0x" "V1y") ("c_2Einteger_2Eint__add" "V0x" ("c_2Einteger_2Eint__neg" "V1y"))))))))
; integer.INT_SUB_REDUCE: ∀V0m V1n V2p.     (V2p − 0 = V2p) ∧ (0 − V2p = -V2p) ∧     (&NUMERAL V0m − &NUMERAL V1n = &NUMERAL V0m + -&NUMERAL V1n) ∧     (-&NUMERAL V0m − &NUMERAL V1n = -&NUMERAL V0m + -&NUMERAL V1n) ∧     (&NUMERAL V0m − -&NUMERAL V1n = &NUMERAL V0m + &NUMERAL V1n) ∧     (-&NUMERAL V0m − -&NUMERAL V1n = -&NUMERAL V0m + &NUMERAL V1n)
(conjecture "thm_2Einteger_2EINT__SUB__REDUCE" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0m" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1n" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2p" "ty_2Einteger_2Eint" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__sub" "V2p" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) "V2p") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__sub" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V2p") ("c_2Einteger_2Eint__neg" "V2p")) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__sub" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m")) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1n"))) ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m")) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1n"))))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__sub" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m"))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1n"))) ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m"))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1n"))))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__sub" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m")) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1n")))) ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m")) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1n")))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__sub" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m"))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1n")))) ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m"))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1n"))))))))))))))))
; integer.INT_MUL_CALCULATE: (∀V0m V1n. &V0m * &V1n = &(V0m * V1n)) ∧ (∀V2x V3y. -V2x * V3y = -(V2x * V3y)) ∧ (∀V4x V5y. V4x * -V5y = -(V4x * V5y)) ∧ ∀V6x. - -V6x = V6x
(conjecture "thm_2Einteger_2EINT__MUL__CALCULATE" ("c_2Ebool_2E_2F_5C" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0m" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1n" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mul" ("c_2Einteger_2Eint__of__num" "V0m") ("c_2Einteger_2Eint__of__num" "V1n")) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2E_2A" "V0m" "V1n"))))))) ("c_2Ebool_2E_2F_5C" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V3y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mul" ("c_2Einteger_2Eint__neg" "V2x") "V3y") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__mul" "V2x" "V3y"))))))) ("c_2Ebool_2E_2F_5C" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V4x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V5y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mul" "V4x" ("c_2Einteger_2Eint__neg" "V5y")) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__mul" "V4x" "V5y"))))))) (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V6x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__neg" "V6x")) "V6x")))))))
; integer.INT_MUL_REDUCE: ∀V0m V1n V2p.     (V2p * 0 = 0) ∧ (0 * V2p = 0) ∧     (&NUMERAL V0m * &NUMERAL V1n = &NUMERAL (V0m * V1n)) ∧     (-&NUMERAL V0m * &NUMERAL V1n = -&NUMERAL (V0m * V1n)) ∧     (&NUMERAL V0m * -&NUMERAL V1n = -&NUMERAL (V0m * V1n)) ∧     (-&NUMERAL V0m * -&NUMERAL V1n = &NUMERAL (V0m * V1n))
(conjecture "thm_2Einteger_2EINT__MUL__REDUCE" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0m" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1n" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2p" "ty_2Einteger_2Eint" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mul" "V2p" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mul" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") "V2p") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mul" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m")) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1n"))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2E_2A" "V0m" "V1n")))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mul" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m"))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1n"))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2E_2A" "V0m" "V1n"))))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mul" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m")) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1n")))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2E_2A" "V0m" "V1n"))))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mul" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m"))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1n")))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2E_2A" "V0m" "V1n"))))))))))))))))
; integer.INT_DIV_CALCULATE: (∀V0n V1m. V1m ≠ 0 ⇒ (&V0n / &V1m = &(V0n DIV V1m))) ∧ (∀V2p V3q. V3q ≠ 0 ⇒ (V2p / -V3q = -V2p / V3q)) ∧ (∀V4m V5n. (&V4m = &V5n) ⇔ (V4m = V5n)) ∧ (∀V6x. (-V6x = 0) ⇔ (V6x = 0)) ∧ ∀V7x. - -V7x = V7x
(conjecture "thm_2Einteger_2EINT__DIV__CALCULATE" ("c_2Ebool_2E_2F_5C" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0n" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1m" "ty_2Enum_2Enum" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Enum_2Enum") "V1m" "c_2Enum_2E0")) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__div" ("c_2Einteger_2Eint__of__num" "V0n") ("c_2Einteger_2Eint__of__num" "V1m")) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EDIV" "V0n" "V1m")))))))) ("c_2Ebool_2E_2F_5C" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V3q" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V3q" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__div" "V2p" ("c_2Einteger_2Eint__neg" "V3q")) ("c_2Einteger_2Eint__div" ("c_2Einteger_2Eint__neg" "V2p") "V3q"))))))) ("c_2Ebool_2E_2F_5C" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V4m" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V5n" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__of__num" "V4m") ("c_2Einteger_2Eint__of__num" "V5n")) (("c_2Emin_2E_3D" "ty_2Enum_2Enum") "V4m" "V5n")))))) ("c_2Ebool_2E_2F_5C" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V6x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__neg" "V6x") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V6x" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))))) (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V7x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__neg" "V7x")) "V7x"))))))))
; integer.INT_DIV_REDUCE: ∀V0m V1n.     (0 / &NUMERAL (BIT1 V1n) = 0) ∧ (0 / &NUMERAL (BIT2 V1n) = 0) ∧     (&NUMERAL V0m / &NUMERAL (BIT1 V1n) =      &(NUMERAL V0m DIV NUMERAL (BIT1 V1n))) ∧     (&NUMERAL V0m / &NUMERAL (BIT2 V1n) =      &(NUMERAL V0m DIV NUMERAL (BIT2 V1n))) ∧     (-&NUMERAL V0m / &NUMERAL (BIT1 V1n) =      -&(NUMERAL V0m DIV NUMERAL (BIT1 V1n)) +      if NUMERAL V0m MOD NUMERAL (BIT1 V1n) = 0 then 0 else -1) ∧     (-&NUMERAL V0m / &NUMERAL (BIT2 V1n) =      -&(NUMERAL V0m DIV NUMERAL (BIT2 V1n)) +      if NUMERAL V0m MOD NUMERAL (BIT2 V1n) = 0 then 0 else -1) ∧     (&NUMERAL V0m / -&NUMERAL (BIT1 V1n) =      -&(NUMERAL V0m DIV NUMERAL (BIT1 V1n)) +      if NUMERAL V0m MOD NUMERAL (BIT1 V1n) = 0 then 0 else -1) ∧     (&NUMERAL V0m / -&NUMERAL (BIT2 V1n) =      -&(NUMERAL V0m DIV NUMERAL (BIT2 V1n)) +      if NUMERAL V0m MOD NUMERAL (BIT2 V1n) = 0 then 0 else -1) ∧     (-&NUMERAL V0m / -&NUMERAL (BIT1 V1n) =      &(NUMERAL V0m DIV NUMERAL (BIT1 V1n))) ∧     (-&NUMERAL V0m / -&NUMERAL (BIT2 V1n) =      &(NUMERAL V0m DIV NUMERAL (BIT2 V1n)))
(conjecture "thm_2Einteger_2EINT__DIV__REDUCE" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0m" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1n" "ty_2Enum_2Enum" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__div" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V1n")))) ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__div" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V1n")))) ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__div" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m")) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V1n")))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EDIV" ("c_2Earithmetic_2ENUMERAL" "V0m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V1n"))))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__div" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m")) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V1n")))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EDIV" ("c_2Earithmetic_2ENUMERAL" "V0m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V1n"))))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__div" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m"))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V1n")))) ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EDIV" ("c_2Earithmetic_2ENUMERAL" "V0m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V1n"))))) (("c_2Ebool_2ECOND" "ty_2Einteger_2Eint") (("c_2Emin_2E_3D" "ty_2Enum_2Enum") ("c_2Earithmetic_2EMOD" ("c_2Earithmetic_2ENUMERAL" "V0m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V1n"))) "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO"))))))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__div" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m"))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V1n")))) ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EDIV" ("c_2Earithmetic_2ENUMERAL" "V0m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V1n"))))) (("c_2Ebool_2ECOND" "ty_2Einteger_2Eint") (("c_2Emin_2E_3D" "ty_2Enum_2Enum") ("c_2Earithmetic_2EMOD" ("c_2Earithmetic_2ENUMERAL" "V0m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V1n"))) "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO"))))))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__div" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m")) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V1n"))))) ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EDIV" ("c_2Earithmetic_2ENUMERAL" "V0m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V1n"))))) (("c_2Ebool_2ECOND" "ty_2Einteger_2Eint") (("c_2Emin_2E_3D" "ty_2Enum_2Enum") ("c_2Earithmetic_2EMOD" ("c_2Earithmetic_2ENUMERAL" "V0m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V1n"))) "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO"))))))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__div" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m")) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V1n"))))) ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EDIV" ("c_2Earithmetic_2ENUMERAL" "V0m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V1n"))))) (("c_2Ebool_2ECOND" "ty_2Einteger_2Eint") (("c_2Emin_2E_3D" "ty_2Enum_2Enum") ("c_2Earithmetic_2EMOD" ("c_2Earithmetic_2ENUMERAL" "V0m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V1n"))) "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO"))))))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__div" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m"))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V1n"))))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EDIV" ("c_2Earithmetic_2ENUMERAL" "V0m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V1n"))))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__div" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m"))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V1n"))))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EDIV" ("c_2Earithmetic_2ENUMERAL" "V0m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V1n")))))))))))))))))))
; integer.INT_QUOT_CALCULATE: (∀V0p V1q. V1q ≠ 0 ⇒ (&V0p quot &V1q = &(V0p DIV V1q))) ∧ (∀V2p V3q.      V3q ≠ 0 ⇒      (-V2p quot V3q = -(V2p quot V3q)) ∧ (V2p quot -V3q = -(V2p quot V3q))) ∧ (∀V4m V5n. (&V4m = &V5n) ⇔ (V4m = V5n)) ∧ (∀V6x. (-V6x = 0) ⇔ (V6x = 0)) ∧ ∀V7x. - -V7x = V7x
(conjecture "thm_2Einteger_2EINT__QUOT__CALCULATE" ("c_2Ebool_2E_2F_5C" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0p" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1q" "ty_2Enum_2Enum" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Enum_2Enum") "V1q" "c_2Enum_2E0")) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__quot" ("c_2Einteger_2Eint__of__num" "V0p") ("c_2Einteger_2Eint__of__num" "V1q")) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EDIV" "V0p" "V1q")))))))) ("c_2Ebool_2E_2F_5C" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V3q" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V3q" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__quot" ("c_2Einteger_2Eint__neg" "V2p") "V3q") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__quot" "V2p" "V3q"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__quot" "V2p" ("c_2Einteger_2Eint__neg" "V3q")) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__quot" "V2p" "V3q"))))))))) ("c_2Ebool_2E_2F_5C" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V4m" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V5n" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__of__num" "V4m") ("c_2Einteger_2Eint__of__num" "V5n")) (("c_2Emin_2E_3D" "ty_2Enum_2Enum") "V4m" "V5n")))))) ("c_2Ebool_2E_2F_5C" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V6x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__neg" "V6x") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V6x" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))))) (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V7x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__neg" "V7x")) "V7x"))))))))
; integer.INT_QUOT_REDUCE: ∀V0m V1n.     (0 quot &NUMERAL (BIT1 V1n) = 0) ∧ (0 quot &NUMERAL (BIT2 V1n) = 0) ∧     (&NUMERAL V0m quot &NUMERAL (BIT1 V1n) =      &(NUMERAL V0m DIV NUMERAL (BIT1 V1n))) ∧     (&NUMERAL V0m quot &NUMERAL (BIT2 V1n) =      &(NUMERAL V0m DIV NUMERAL (BIT2 V1n))) ∧     (-&NUMERAL V0m quot &NUMERAL (BIT1 V1n) =      -&(NUMERAL V0m DIV NUMERAL (BIT1 V1n))) ∧     (-&NUMERAL V0m quot &NUMERAL (BIT2 V1n) =      -&(NUMERAL V0m DIV NUMERAL (BIT2 V1n))) ∧     (&NUMERAL V0m quot -&NUMERAL (BIT1 V1n) =      -&(NUMERAL V0m DIV NUMERAL (BIT1 V1n))) ∧     (&NUMERAL V0m quot -&NUMERAL (BIT2 V1n) =      -&(NUMERAL V0m DIV NUMERAL (BIT2 V1n))) ∧     (-&NUMERAL V0m quot -&NUMERAL (BIT1 V1n) =      &(NUMERAL V0m DIV NUMERAL (BIT1 V1n))) ∧     (-&NUMERAL V0m quot -&NUMERAL (BIT2 V1n) =      &(NUMERAL V0m DIV NUMERAL (BIT2 V1n)))
(conjecture "thm_2Einteger_2EINT__QUOT__REDUCE" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0m" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1n" "ty_2Enum_2Enum" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__quot" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V1n")))) ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__quot" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V1n")))) ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__quot" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m")) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V1n")))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EDIV" ("c_2Earithmetic_2ENUMERAL" "V0m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V1n"))))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__quot" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m")) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V1n")))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EDIV" ("c_2Earithmetic_2ENUMERAL" "V0m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V1n"))))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__quot" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m"))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V1n")))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EDIV" ("c_2Earithmetic_2ENUMERAL" "V0m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V1n")))))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__quot" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m"))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V1n")))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EDIV" ("c_2Earithmetic_2ENUMERAL" "V0m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V1n")))))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__quot" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m")) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V1n"))))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EDIV" ("c_2Earithmetic_2ENUMERAL" "V0m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V1n")))))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__quot" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m")) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V1n"))))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EDIV" ("c_2Earithmetic_2ENUMERAL" "V0m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V1n")))))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__quot" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m"))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V1n"))))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EDIV" ("c_2Earithmetic_2ENUMERAL" "V0m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V1n"))))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__quot" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m"))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V1n"))))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EDIV" ("c_2Earithmetic_2ENUMERAL" "V0m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V1n")))))))))))))))))))
; integer.INT_MOD_CALCULATE: (∀V0n V1m. V1m ≠ 0 ⇒ (&V0n % &V1m = &(V0n MOD V1m))) ∧ (∀V2p V3q. V3q ≠ 0 ⇒ (V2p % -V3q = -(-V2p % V3q))) ∧ (∀V4x. - -V4x = V4x) ∧ (∀V5m V6n. (&V5m = &V6n) ⇔ (V5m = V6n)) ∧ ∀V7x. (-V7x = 0) ⇔ (V7x = 0)
(conjecture "thm_2Einteger_2EINT__MOD__CALCULATE" ("c_2Ebool_2E_2F_5C" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0n" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1m" "ty_2Enum_2Enum" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Enum_2Enum") "V1m" "c_2Enum_2E0")) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" ("c_2Einteger_2Eint__of__num" "V0n") ("c_2Einteger_2Eint__of__num" "V1m")) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EMOD" "V0n" "V1m")))))))) ("c_2Ebool_2E_2F_5C" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V3q" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V3q" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" "V2p" ("c_2Einteger_2Eint__neg" "V3q")) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__mod" ("c_2Einteger_2Eint__neg" "V2p") "V3q")))))))) ("c_2Ebool_2E_2F_5C" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V4x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__neg" "V4x")) "V4x"))) ("c_2Ebool_2E_2F_5C" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V5m" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V6n" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__of__num" "V5m") ("c_2Einteger_2Eint__of__num" "V6n")) (("c_2Emin_2E_3D" "ty_2Enum_2Enum") "V5m" "V6n")))))) (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V7x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__neg" "V7x") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V7x" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))))))))))
; integer.INT_MOD_REDUCE: ∀V0x V1m V2n.     (0 % &NUMERAL (BIT1 V2n) = 0) ∧ (0 % &NUMERAL (BIT2 V2n) = 0) ∧     (0 % -&NUMERAL (BIT1 V2n) = 0) ∧ (0 % -&NUMERAL (BIT2 V2n) = 0) ∧     (&NUMERAL V1m % &NUMERAL (BIT1 V2n) =      &(NUMERAL V1m MOD NUMERAL (BIT1 V2n))) ∧     (&NUMERAL V1m % &NUMERAL (BIT2 V2n) =      &(NUMERAL V1m MOD NUMERAL (BIT2 V2n))) ∧     (&NUMERAL V1m % -&NUMERAL (BIT1 V2n) =      -(-&NUMERAL V1m % &NUMERAL (BIT1 V2n))) ∧     (&NUMERAL V1m % -&NUMERAL (BIT2 V2n) =      -(-&NUMERAL V1m % &NUMERAL (BIT2 V2n))) ∧     (V0x % &NUMERAL (BIT1 V2n) =      V0x − V0x / &NUMERAL (BIT1 V2n) * &NUMERAL (BIT1 V2n)) ∧     (V0x % &NUMERAL (BIT2 V2n) =      V0x − V0x / &NUMERAL (BIT2 V2n) * &NUMERAL (BIT2 V2n)) ∧     (V0x % -&NUMERAL (BIT1 V2n) =      -V0x / &NUMERAL (BIT1 V2n) * &NUMERAL (BIT1 V2n) + V0x) ∧     (V0x % -&NUMERAL (BIT2 V2n) =      -V0x / &NUMERAL (BIT2 V2n) * &NUMERAL (BIT2 V2n) + V0x)
(conjecture "thm_2Einteger_2EINT__MOD__REDUCE" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1m" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V2n" "ty_2Enum_2Enum" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V2n")))) ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V2n")))) ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V2n"))))) ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V2n"))))) ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m")) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V2n")))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EMOD" ("c_2Earithmetic_2ENUMERAL" "V1m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V2n"))))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m")) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V2n")))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EMOD" ("c_2Earithmetic_2ENUMERAL" "V1m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V2n"))))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m")) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V2n"))))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__mod" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m"))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V2n")))))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m")) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V2n"))))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__mod" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m"))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V2n")))))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" "V0x" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V2n")))) ("c_2Einteger_2Eint__sub" "V0x" ("c_2Einteger_2Eint__mul" ("c_2Einteger_2Eint__div" "V0x" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V2n")))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V2n")))))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" "V0x" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V2n")))) ("c_2Einteger_2Eint__sub" "V0x" ("c_2Einteger_2Eint__mul" ("c_2Einteger_2Eint__div" "V0x" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V2n")))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V2n")))))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" "V0x" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V2n"))))) ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__mul" ("c_2Einteger_2Eint__div" ("c_2Einteger_2Eint__neg" "V0x") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V2n")))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V2n")))) "V0x")) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__mod" "V0x" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V2n"))))) ("c_2Einteger_2Eint__add" ("c_2Einteger_2Eint__mul" ("c_2Einteger_2Eint__div" ("c_2Einteger_2Eint__neg" "V0x") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V2n")))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V2n")))) "V0x"))))))))))))))))))))
; integer.INT_REM_CALCULATE: (∀V0p V1q. V1q ≠ 0 ⇒ (&V0p rem &V1q = &(V0p MOD V1q))) ∧ (∀V2p V3q.      V3q ≠ 0 ⇒ (-V2p rem V3q = -(V2p rem V3q)) ∧ (V2p rem -V3q = V2p rem V3q)) ∧ (∀V4x. - -V4x = V4x) ∧ (∀V5m V6n. (&V5m = &V6n) ⇔ (V5m = V6n)) ∧ ∀V7x. (-V7x = 0) ⇔ (V7x = 0)
(conjecture "thm_2Einteger_2EINT__REM__CALCULATE" ("c_2Ebool_2E_2F_5C" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0p" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1q" "ty_2Enum_2Enum" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Enum_2Enum") "V1q" "c_2Enum_2E0")) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__rem" ("c_2Einteger_2Eint__of__num" "V0p") ("c_2Einteger_2Eint__of__num" "V1q")) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EMOD" "V0p" "V1q")))))))) ("c_2Ebool_2E_2F_5C" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V3q" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Ebool_2E_7E" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V3q" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__rem" ("c_2Einteger_2Eint__neg" "V2p") "V3q") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__rem" "V2p" "V3q"))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__rem" "V2p" ("c_2Einteger_2Eint__neg" "V3q")) ("c_2Einteger_2Eint__rem" "V2p" "V3q")))))))) ("c_2Ebool_2E_2F_5C" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V4x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__neg" "V4x")) "V4x"))) ("c_2Ebool_2E_2F_5C" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V5m" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V6n" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__of__num" "V5m") ("c_2Einteger_2Eint__of__num" "V6n")) (("c_2Emin_2E_3D" "ty_2Enum_2Enum") "V5m" "V6n")))))) (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V7x" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__neg" "V7x") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V7x" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0"))))))))))
; integer.INT_REM_REDUCE: ∀V0m V1n.     (0 rem &NUMERAL (BIT1 V1n) = 0) ∧ (0 rem &NUMERAL (BIT2 V1n) = 0) ∧     (&NUMERAL V0m rem &NUMERAL (BIT1 V1n) =      &(NUMERAL V0m MOD NUMERAL (BIT1 V1n))) ∧     (&NUMERAL V0m rem &NUMERAL (BIT2 V1n) =      &(NUMERAL V0m MOD NUMERAL (BIT2 V1n))) ∧     (-&NUMERAL V0m rem &NUMERAL (BIT1 V1n) =      -&(NUMERAL V0m MOD NUMERAL (BIT1 V1n))) ∧     (-&NUMERAL V0m rem &NUMERAL (BIT2 V1n) =      -&(NUMERAL V0m MOD NUMERAL (BIT2 V1n))) ∧     (&NUMERAL V0m rem -&NUMERAL (BIT1 V1n) =      &(NUMERAL V0m MOD NUMERAL (BIT1 V1n))) ∧     (&NUMERAL V0m rem -&NUMERAL (BIT2 V1n) =      &(NUMERAL V0m MOD NUMERAL (BIT2 V1n))) ∧     (-&NUMERAL V0m rem -&NUMERAL (BIT1 V1n) =      -&(NUMERAL V0m MOD NUMERAL (BIT1 V1n))) ∧     (-&NUMERAL V0m rem -&NUMERAL (BIT2 V1n) =      -&(NUMERAL V0m MOD NUMERAL (BIT2 V1n)))
(conjecture "thm_2Einteger_2EINT__REM__REDUCE" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0m" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1n" "ty_2Enum_2Enum" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__rem" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V1n")))) ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__rem" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V1n")))) ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__rem" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m")) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V1n")))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EMOD" ("c_2Earithmetic_2ENUMERAL" "V0m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V1n"))))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__rem" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m")) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V1n")))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EMOD" ("c_2Earithmetic_2ENUMERAL" "V0m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V1n"))))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__rem" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m"))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V1n")))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EMOD" ("c_2Earithmetic_2ENUMERAL" "V0m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V1n")))))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__rem" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m"))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V1n")))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EMOD" ("c_2Earithmetic_2ENUMERAL" "V0m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V1n")))))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__rem" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m")) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V1n"))))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EMOD" ("c_2Earithmetic_2ENUMERAL" "V0m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V1n"))))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__rem" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m")) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V1n"))))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EMOD" ("c_2Earithmetic_2ENUMERAL" "V0m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V1n"))))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__rem" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m"))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V1n"))))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EMOD" ("c_2Earithmetic_2ENUMERAL" "V0m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V1n")))))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__rem" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0m"))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V1n"))))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EMOD" ("c_2Earithmetic_2ENUMERAL" "V0m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V1n"))))))))))))))))))))
; integer.INT_EXP_CALCULATE: ∀V0p V1n V2m.     (V0p ** 0 = 1) ∧ (&V1n ** V2m = &(V1n ** V2m)) ∧     (-&V1n ** NUMERAL (BIT1 V2m) = -&NUMERAL (V1n ** NUMERAL (BIT1 V2m))) ∧     (-&V1n ** NUMERAL (BIT2 V2m) = &NUMERAL (V1n ** NUMERAL (BIT2 V2m)))
(conjecture "thm_2Einteger_2EINT__EXP__CALCULATE" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0p" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1n" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V2m" "ty_2Enum_2Enum" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__exp" "V0p" "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO")))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__exp" ("c_2Einteger_2Eint__of__num" "V1n") "V2m") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2EEXP" "V1n" "V2m"))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__exp" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" "V1n")) ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V2m"))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EEXP" "V1n" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V2m"))))))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__exp" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" "V1n")) ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V2m"))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EEXP" "V1n" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V2m"))))))))))))))))
; integer.INT_EXP_REDUCE: ∀V0n V1m V2p.     (V2p ** 0 = 1) ∧ (&NUMERAL V0n ** NUMERAL V1m = &NUMERAL (V0n ** V1m)) ∧     (-&NUMERAL V0n ** NUMERAL (BIT1 V1m) = -&NUMERAL (V0n ** BIT1 V1m)) ∧     (-&NUMERAL V0n ** NUMERAL (BIT2 V1m) = &NUMERAL (V0n ** BIT2 V1m))
(conjecture "thm_2Einteger_2EINT__EXP__REDUCE" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0n" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1m" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2p" "ty_2Einteger_2Eint" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__exp" "V2p" "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "c_2Earithmetic_2EZERO")))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__exp" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0n")) ("c_2Earithmetic_2ENUMERAL" "V1m")) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EEXP" "V0n" "V1m")))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__exp" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0n"))) ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V1m"))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EEXP" "V0n" ("c_2Earithmetic_2EBIT1" "V1m")))))) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__exp" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0n"))) ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V1m"))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EEXP" "V0n" ("c_2Earithmetic_2EBIT2" "V1m")))))))))))))))
; integer.INT_LT_REDUCE: ∀V0n V1m.     (0 < &NUMERAL (BIT1 V0n) ⇔ T) ∧ (0 < &NUMERAL (BIT2 V0n) ⇔ T) ∧     (0 < 0 ⇔ F) ∧ (0 < -&NUMERAL V0n ⇔ F) ∧ (&NUMERAL V0n < 0 ⇔ F) ∧     (-&NUMERAL (BIT1 V0n) < 0 ⇔ T) ∧ (-&NUMERAL (BIT2 V0n) < 0 ⇔ T) ∧     (&NUMERAL V0n < &NUMERAL V1m ⇔ V0n < V1m) ∧     (-&NUMERAL (BIT1 V0n) < &NUMERAL V1m ⇔ T) ∧     (-&NUMERAL (BIT2 V0n) < &NUMERAL V1m ⇔ T) ∧     (&NUMERAL V0n < -&NUMERAL V1m ⇔ F) ∧     (-&NUMERAL V0n < -&NUMERAL V1m ⇔ V1m < V0n)
(conjecture "thm_2Einteger_2EINT__LT__REDUCE" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0n" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1m" "ty_2Enum_2Enum" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V0n")))) "c_2Ebool_2ET") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V0n")))) "c_2Ebool_2ET") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) "c_2Ebool_2EF") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0n")))) "c_2Ebool_2EF") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0n")) ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) "c_2Ebool_2EF") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V0n")))) ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) "c_2Ebool_2ET") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V0n")))) ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) "c_2Ebool_2ET") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0n")) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m"))) ("c_2Eprim__rec_2E_3C" "V0n" "V1m")) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V0n")))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m"))) "c_2Ebool_2ET") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V0n")))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m"))) "c_2Ebool_2ET") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0n")) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m")))) "c_2Ebool_2EF") (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__lt" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0n"))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m")))) ("c_2Eprim__rec_2E_3C" "V1m" "V0n"))))))))))))))))))
; integer.INT_LE_CALCULATE: ∀V0x V1y. V0x ≤ V1y ⇔ V0x < V1y ∨ (V0x = V1y)
(conjecture "thm_2Einteger_2EINT__LE__CALCULATE" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" "V0x" "V1y") ("c_2Ebool_2E_5C_2F" ("c_2Einteger_2Eint__lt" "V0x" "V1y") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V0x" "V1y"))))))))
; integer.INT_LE_REDUCE: ∀V0n V1m.     (0 ≤ 0 ⇔ T) ∧ (0 ≤ &NUMERAL V0n ⇔ T) ∧ (0 ≤ -&NUMERAL (BIT1 V0n) ⇔ F) ∧     (0 ≤ -&NUMERAL (BIT2 V0n) ⇔ F) ∧ (&NUMERAL (BIT1 V0n) ≤ 0 ⇔ F) ∧     (&NUMERAL (BIT2 V0n) ≤ 0 ⇔ F) ∧ (-&NUMERAL (BIT1 V0n) ≤ 0 ⇔ T) ∧     (-&NUMERAL (BIT2 V0n) ≤ 0 ⇔ T) ∧     (&NUMERAL V0n ≤ &NUMERAL V1m ⇔ V0n ≤ V1m) ∧     (&NUMERAL V0n ≤ -&NUMERAL (BIT1 V1m) ⇔ F) ∧     (&NUMERAL V0n ≤ -&NUMERAL (BIT2 V1m) ⇔ F) ∧     (-&NUMERAL V0n ≤ &NUMERAL V1m ⇔ T) ∧     (-&NUMERAL V0n ≤ -&NUMERAL V1m ⇔ V1m ≤ V0n)
(conjecture "thm_2Einteger_2EINT__LE__REDUCE" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0n" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1m" "ty_2Enum_2Enum" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) "c_2Ebool_2ET") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0n"))) "c_2Ebool_2ET") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V0n"))))) "c_2Ebool_2EF") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V0n"))))) "c_2Ebool_2EF") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V0n"))) ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) "c_2Ebool_2EF") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V0n"))) ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) "c_2Ebool_2EF") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V0n")))) ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) "c_2Ebool_2ET") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V0n")))) ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) "c_2Ebool_2ET") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0n")) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m"))) ("c_2Earithmetic_2E_3C_3D" "V0n" "V1m")) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0n")) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V1m"))))) "c_2Ebool_2EF") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0n")) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V1m"))))) "c_2Ebool_2EF") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0n"))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m"))) "c_2Ebool_2ET") (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__le" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0n"))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m")))) ("c_2Earithmetic_2E_3C_3D" "V1m" "V0n")))))))))))))))))))
; integer.INT_GT_CALCULATE: ∀V0x V1y. V0x > V1y ⇔ V1y < V0x
(conjecture "thm_2Einteger_2EINT__GT__CALCULATE" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__gt" "V0x" "V1y") ("c_2Einteger_2Eint__lt" "V1y" "V0x")))))))
; integer.INT_GT_REDUCE: ∀V0n V1m.     (&NUMERAL (BIT1 V0n) > 0 ⇔ T) ∧ (&NUMERAL (BIT2 V0n) > 0 ⇔ T) ∧     (0 > 0 ⇔ F) ∧ (-&NUMERAL V0n > 0 ⇔ F) ∧ (0 > &NUMERAL V0n ⇔ F) ∧     (0 > -&NUMERAL (BIT1 V0n) ⇔ T) ∧ (0 > -&NUMERAL (BIT2 V0n) ⇔ T) ∧     (&NUMERAL V1m > &NUMERAL V0n ⇔ V0n < V1m) ∧     (&NUMERAL V1m > -&NUMERAL (BIT1 V0n) ⇔ T) ∧     (&NUMERAL V1m > -&NUMERAL (BIT2 V0n) ⇔ T) ∧     (-&NUMERAL V1m > &NUMERAL V0n ⇔ F) ∧     (-&NUMERAL V1m > -&NUMERAL V0n ⇔ V1m < V0n)
(conjecture "thm_2Einteger_2EINT__GT__REDUCE" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0n" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1m" "ty_2Enum_2Enum" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__gt" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V0n"))) ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) "c_2Ebool_2ET") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__gt" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V0n"))) ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) "c_2Ebool_2ET") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__gt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) "c_2Ebool_2EF") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__gt" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0n"))) ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) "c_2Ebool_2EF") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__gt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0n"))) "c_2Ebool_2EF") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__gt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V0n"))))) "c_2Ebool_2ET") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__gt" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V0n"))))) "c_2Ebool_2ET") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__gt" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m")) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0n"))) ("c_2Eprim__rec_2E_3C" "V0n" "V1m")) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__gt" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m")) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V0n"))))) "c_2Ebool_2ET") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__gt" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m")) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V0n"))))) "c_2Ebool_2ET") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__gt" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m"))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0n"))) "c_2Ebool_2EF") (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__gt" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m"))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0n")))) ("c_2Eprim__rec_2E_3C" "V1m" "V0n"))))))))))))))))))
; integer.INT_GE_CALCULATE: ∀V0x V1y. V0x ≥ V1y ⇔ V1y ≤ V0x
(conjecture "thm_2Einteger_2EINT__GE__CALCULATE" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V0x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V1y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__ge" "V0x" "V1y") ("c_2Einteger_2Eint__le" "V1y" "V0x")))))))
; integer.INT_GE_REDUCE: ∀V0n V1m.     (0 ≥ 0 ⇔ T) ∧ (&NUMERAL V0n ≥ 0 ⇔ T) ∧ (-&NUMERAL (BIT1 V0n) ≥ 0 ⇔ F) ∧     (-&NUMERAL (BIT2 V0n) ≥ 0 ⇔ F) ∧ (0 ≥ &NUMERAL (BIT1 V0n) ⇔ F) ∧     (0 ≥ &NUMERAL (BIT2 V0n) ⇔ F) ∧ (0 ≥ -&NUMERAL (BIT1 V0n) ⇔ T) ∧     (0 ≥ -&NUMERAL (BIT2 V0n) ⇔ T) ∧     (&NUMERAL V1m ≥ &NUMERAL V0n ⇔ V0n ≤ V1m) ∧     (-&NUMERAL (BIT1 V1m) ≥ &NUMERAL V0n ⇔ F) ∧     (-&NUMERAL (BIT2 V1m) ≥ &NUMERAL V0n ⇔ F) ∧     (&NUMERAL V1m ≥ -&NUMERAL V0n ⇔ T) ∧     (-&NUMERAL V1m ≥ -&NUMERAL V0n ⇔ V1m ≤ V0n)
(conjecture "thm_2Einteger_2EINT__GE__REDUCE" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0n" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1m" "ty_2Enum_2Enum" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__ge" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) "c_2Ebool_2ET") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__ge" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0n")) ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) "c_2Ebool_2ET") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__ge" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V0n")))) ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) "c_2Ebool_2EF") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__ge" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V0n")))) ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) "c_2Ebool_2EF") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__ge" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V0n")))) "c_2Ebool_2EF") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__ge" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V0n")))) "c_2Ebool_2EF") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__ge" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V0n"))))) "c_2Ebool_2ET") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__ge" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V0n"))))) "c_2Ebool_2ET") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__ge" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m")) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0n"))) ("c_2Earithmetic_2E_3C_3D" "V0n" "V1m")) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__ge" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V1m")))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0n"))) "c_2Ebool_2EF") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__ge" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V1m")))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0n"))) "c_2Ebool_2EF") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__ge" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m")) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0n")))) "c_2Ebool_2ET") (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__ge" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m"))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0n")))) ("c_2Earithmetic_2E_3C_3D" "V1m" "V0n")))))))))))))))))))
; integer.INT_EQ_CALCULATE: (∀V0m V1n. (&V0m = &V1n) ⇔ (V0m = V1n)) ∧ (∀V2x V3y. (-V2x = -V3y) ⇔ (V2x = V3y)) ∧ ∀V4n V5m.     ((&V4n = -&V5m) ⇔ (V4n = 0) ∧ (V5m = 0)) ∧     ((-&V4n = &V5m) ⇔ (V4n = 0) ∧ (V5m = 0))
(conjecture "thm_2Einteger_2EINT__EQ__CALCULATE" ("c_2Ebool_2E_2F_5C" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0m" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1n" "ty_2Enum_2Enum" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__of__num" "V0m") ("c_2Einteger_2Eint__of__num" "V1n")) (("c_2Emin_2E_3D" "ty_2Enum_2Enum") "V0m" "V1n")))))) ("c_2Ebool_2E_2F_5C" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2x" "ty_2Einteger_2Eint" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V3y" "ty_2Einteger_2Eint" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__neg" "V2x") ("c_2Einteger_2Eint__neg" "V3y")) (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") "V2x" "V3y")))))) (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V4n" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V5m" "ty_2Enum_2Enum" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__of__num" "V4n") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" "V5m"))) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Enum_2Enum") "V4n" "c_2Enum_2E0") (("c_2Emin_2E_3D" "ty_2Enum_2Enum") "V5m" "c_2Enum_2E0"))) (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" "V4n")) ("c_2Einteger_2Eint__of__num" "V5m")) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Enum_2Enum") "V4n" "c_2Enum_2E0") (("c_2Emin_2E_3D" "ty_2Enum_2Enum") "V5m" "c_2Enum_2E0")))))))))))
; integer.INT_EQ_REDUCE: ∀V0n V1m.     ((0 = 0) ⇔ T) ∧ ((0 = &NUMERAL (BIT1 V0n)) ⇔ F) ∧     ((0 = &NUMERAL (BIT2 V0n)) ⇔ F) ∧ ((0 = -&NUMERAL (BIT1 V0n)) ⇔ F) ∧     ((0 = -&NUMERAL (BIT2 V0n)) ⇔ F) ∧ ((&NUMERAL (BIT1 V0n) = 0) ⇔ F) ∧     ((&NUMERAL (BIT2 V0n) = 0) ⇔ F) ∧ ((-&NUMERAL (BIT1 V0n) = 0) ⇔ F) ∧     ((-&NUMERAL (BIT2 V0n) = 0) ⇔ F) ∧     ((&NUMERAL V0n = &NUMERAL V1m) ⇔ (V0n = V1m)) ∧     ((&NUMERAL (BIT1 V0n) = -&NUMERAL V1m) ⇔ F) ∧     ((&NUMERAL (BIT2 V0n) = -&NUMERAL V1m) ⇔ F) ∧     ((-&NUMERAL (BIT1 V0n) = &NUMERAL V1m) ⇔ F) ∧     ((-&NUMERAL (BIT2 V0n) = &NUMERAL V1m) ⇔ F) ∧     ((-&NUMERAL V0n = -&NUMERAL V1m) ⇔ (V0n = V1m))
(conjecture "thm_2Einteger_2EINT__EQ__REDUCE" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0n" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1m" "ty_2Enum_2Enum" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) "c_2Ebool_2ET") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V0n")))) "c_2Ebool_2EF") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V0n")))) "c_2Ebool_2EF") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V0n"))))) "c_2Ebool_2EF") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V0n"))))) "c_2Ebool_2EF") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V0n"))) ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) "c_2Ebool_2EF") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V0n"))) ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) "c_2Ebool_2EF") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V0n")))) ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) "c_2Ebool_2EF") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V0n")))) ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) "c_2Ebool_2EF") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0n")) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m"))) (("c_2Emin_2E_3D" "ty_2Enum_2Enum") "V0n" "V1m")) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V0n"))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m")))) "c_2Ebool_2EF") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V0n"))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m")))) "c_2Ebool_2EF") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V0n")))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m"))) "c_2Ebool_2EF") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V0n")))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m"))) "c_2Ebool_2EF") (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V0n"))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m")))) (("c_2Emin_2E_3D" "ty_2Enum_2Enum") "V0n" "V1m")))))))))))))))))))))
; integer.INT_DIVIDES_REDUCE: ∀V0n V1m V2p.     (0 int_divides 0 ⇔ T) ∧ (0 int_divides &NUMERAL (BIT1 V0n) ⇔ F) ∧     (0 int_divides &NUMERAL (BIT2 V0n) ⇔ F) ∧ (V2p int_divides 0 ⇔ T) ∧     (&NUMERAL (BIT1 V0n) int_divides &NUMERAL V1m ⇔      (NUMERAL V1m MOD NUMERAL (BIT1 V0n) = 0)) ∧     (&NUMERAL (BIT2 V0n) int_divides &NUMERAL V1m ⇔      (NUMERAL V1m MOD NUMERAL (BIT2 V0n) = 0)) ∧     (&NUMERAL (BIT1 V0n) int_divides -&NUMERAL V1m ⇔      (NUMERAL V1m MOD NUMERAL (BIT1 V0n) = 0)) ∧     (&NUMERAL (BIT2 V0n) int_divides -&NUMERAL V1m ⇔      (NUMERAL V1m MOD NUMERAL (BIT2 V0n) = 0)) ∧     (-&NUMERAL (BIT1 V0n) int_divides &NUMERAL V1m ⇔      (NUMERAL V1m MOD NUMERAL (BIT1 V0n) = 0)) ∧     (-&NUMERAL (BIT2 V0n) int_divides &NUMERAL V1m ⇔      (NUMERAL V1m MOD NUMERAL (BIT2 V0n) = 0)) ∧     (-&NUMERAL (BIT1 V0n) int_divides -&NUMERAL V1m ⇔      (NUMERAL V1m MOD NUMERAL (BIT1 V0n) = 0)) ∧     (-&NUMERAL (BIT2 V0n) int_divides -&NUMERAL V1m ⇔      (NUMERAL V1m MOD NUMERAL (BIT2 V0n) = 0))
(conjecture "thm_2Einteger_2EINT__DIVIDES__REDUCE" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V0n" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Enum_2Enum") (lambda "V1m" "ty_2Enum_2Enum" (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2p" "ty_2Einteger_2Eint" ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__divides" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) "c_2Ebool_2ET") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__divides" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V0n")))) "c_2Ebool_2EF") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__divides" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0") ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V0n")))) "c_2Ebool_2EF") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__divides" "V2p" ("c_2Einteger_2Eint__of__num" "c_2Enum_2E0")) "c_2Ebool_2ET") ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__divides" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V0n"))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m"))) (("c_2Emin_2E_3D" "ty_2Enum_2Enum") ("c_2Earithmetic_2EMOD" ("c_2Earithmetic_2ENUMERAL" "V1m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V0n"))) "c_2Enum_2E0")) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__divides" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V0n"))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m"))) (("c_2Emin_2E_3D" "ty_2Enum_2Enum") ("c_2Earithmetic_2EMOD" ("c_2Earithmetic_2ENUMERAL" "V1m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V0n"))) "c_2Enum_2E0")) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__divides" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V0n"))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m")))) (("c_2Emin_2E_3D" "ty_2Enum_2Enum") ("c_2Earithmetic_2EMOD" ("c_2Earithmetic_2ENUMERAL" "V1m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V0n"))) "c_2Enum_2E0")) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__divides" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V0n"))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m")))) (("c_2Emin_2E_3D" "ty_2Enum_2Enum") ("c_2Earithmetic_2EMOD" ("c_2Earithmetic_2ENUMERAL" "V1m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V0n"))) "c_2Enum_2E0")) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__divides" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V0n")))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m"))) (("c_2Emin_2E_3D" "ty_2Enum_2Enum") ("c_2Earithmetic_2EMOD" ("c_2Earithmetic_2ENUMERAL" "V1m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V0n"))) "c_2Enum_2E0")) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__divides" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V0n")))) ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m"))) (("c_2Emin_2E_3D" "ty_2Enum_2Enum") ("c_2Earithmetic_2EMOD" ("c_2Earithmetic_2ENUMERAL" "V1m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V0n"))) "c_2Enum_2E0")) ("c_2Ebool_2E_2F_5C" (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__divides" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V0n")))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m")))) (("c_2Emin_2E_3D" "ty_2Enum_2Enum") ("c_2Earithmetic_2EMOD" ("c_2Earithmetic_2ENUMERAL" "V1m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT1" "V0n"))) "c_2Enum_2E0")) (("c_2Emin_2E_3D" "ty_2Emin_2Ebool") ("c_2Einteger_2Eint__divides" ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V0n")))) ("c_2Einteger_2Eint__neg" ("c_2Einteger_2Eint__of__num" ("c_2Earithmetic_2ENUMERAL" "V1m")))) (("c_2Emin_2E_3D" "ty_2Enum_2Enum") ("c_2Earithmetic_2EMOD" ("c_2Earithmetic_2ENUMERAL" "V1m") ("c_2Earithmetic_2ENUMERAL" ("c_2Earithmetic_2EBIT2" "V0n"))) "c_2Enum_2E0"))))))))))))))))))))
; integer.LEAST_INT_DEF: ∀V0P. $LEAST_INT V0P = @V1i. V0P V1i ∧ ∀V2j. V2j < V1i ⇒ ¬V0P V2j
(axiom "thm_2Einteger_2ELEAST__INT__DEF" (("c_2Ebool_2E_21" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" "ty_2Emin_2Ebool")) (lambda "V0P" ("ty_2Emin_2Efun" "ty_2Einteger_2Eint" "ty_2Emin_2Ebool") (("c_2Emin_2E_3D" "ty_2Einteger_2Eint") ("c_2Einteger_2ELEAST__INT" "V0P") (("c_2Emin_2E_40" "ty_2Einteger_2Eint") (lambda "V1i" "ty_2Einteger_2Eint" ("c_2Ebool_2E_2F_5C" ("V0P" "V1i") (("c_2Ebool_2E_21" "ty_2Einteger_2Eint") (lambda "V2j" "ty_2Einteger_2Eint" ("c_2Emin_2E_3D_3D_3E" ("c_2Einteger_2Eint__lt" "V2j" "V1i") ("c_2Ebool_2E_7E" ("V0P" "V2j"))))))))))))
